/* DB8221A_regs_goya.h
 *
 * Driver for DB8221A (2MP Camera) from dongbu
 *
 * Copyright (C) 2015, SAMSUNG ELECTRONICS
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 */

#ifndef _DB8221A_REGS_H_
#define _DB8221A_REGS_H_

#if defined(CONFIG_SEC_GTES_PROJECT) || defined(CONFIG_MACH_J3LTE_USA_SPR) || defined(CONFIG_MACH_J3LTE_USA_VZW)
#define INIT_RES_800_600
#endif

/*==============================================*/
/* CAMERA_Init                                  */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_Init_Reg[] = {
/*==================================*/
/* OutFormatter                     */
/*==================================*/
	{0xFF, 0xE1},	// Page
	{0x70, 0x01},	// Outformat
	{0x71, 0x0D},	//

	{0xFF, 0xE0},	// Page
	{0x02, 0x80},	// ISP Mode

/*===================================*/
/* MIPI Setting                      */
/*===================================*/
	{0xFF, 0xE4},	// Page
	{0x10, 0x1E},	// MIPI DATA TYPE Addr
	{0x04, 0x01},	// CSI_EN
	{0xFF, 0x96},	// Page
	{0xD5, 0x1E},	// gPT_u8PR_Active_SXGA_DATA_TYPE_Addr
	{0xD6, 0x0C},	// gPT_u8PR_Active_SXGA_WORD_COUNT_Addr0
	{0xD7, 0x80},	// gPT_u8PR_Active_SXGA_WORD_COUNT_Addr1

	{0xFF, 0x97},	// Page
	{0x13, 0x1E},	// gPT_u8PR_Active_VGA_DATA_TYPE_Addr
#if defined(INIT_RES_800_600)
	{0x14, 0x06},	// gPT_u8PR_Active_VGA_WORD_COUNT_Addr0
	{0x15, 0x40},	// gPT_u8PR_Active_VGA_WORD_COUNT_Addr1
#else
	{0x14, 0x05},	// gPT_u8PR_Active_VGA_WORD_COUNT_Addr0
	{0x15, 0x00},	// gPT_u8PR_Active_VGA_WORD_COUNT_Addr1
#endif

/*===================================*/
/* For Analog Setting                */
/*===================================*/
	{0xFF, 0xE8},	// Page
	{0x0F, 0x01},	// cpga_bias0
	{0x10, 0xCE},	// cpga_bias1
	{0xFF, 0x96},	// Page
	{0xB0, 0x01},	// min cpga_bias0
	{0xB1, 0x08},	// min cpga_bias1
	{0xBD, 0x01},	// mid cpga_bias0
	{0xBE, 0xCE},	// mid cpga_bias1
	{0xC8, 0x01},	// max cpga_bias0
	{0xC9, 0xCE},	// max cpga_bias1

	{0xFF, 0xE8},	// Page
	{0x11, 0x28},	// clamp_on_off_con

	{0x12, 0x80},	// clamp_con
	{0xFF, 0x96},	// Page
	{0xB8, 0x80},	// min_clamp_con
	{0xD0, 0x80},	// max_clamp_con

	{0xFF, 0xE8},	// Page
	{0x13, 0x8C},	// adc_con
	{0xFF, 0x96},	// Page
	{0xB3, 0x8C},	// min_adc_con
	{0xC0, 0x8C},	// mid_adc_con
	{0xCB, 0x8C},	// mid_adc_con

	{0xFF, 0xE8},	// Page
	{0x14, 0xC7},	// cpga_con

	{0x15, 0xEC},	// ramp_ppg_con

	{0x16, 0x87},	// cds_amp1_2_bias //cfpn
	{0xFF, 0x96},	// Page
	{0xB5, 0x87},	// min_cds_amp1_2_bias
	{0xC2, 0x87},	// mid_cds_amp1_2_bias
	{0xCD, 0x87},	// max_cds_amp1_2_bias

	{0xFF, 0xE8},	// Page
	{0x17, 0x04},	// cds_amp3_pixel_bias

	{0x18, 0x10},	// rampgen_con_0
	{0xFF, 0x96},	// Page
	{0xB6, 0x10},	// max_rampgen_con_0
	{0xC3, 0x10},	// mix_rampgen_con_0
	{0xCE, 0x10},	// min_rampgen_con_0

	{0xFF, 0xE8},	// Page
	{0x19, 0x03},	// rampgen_con1
	{0xFF, 0x96},	// Page
	{0xB7, 0x03},	// min_rampgen_con1
	{0xC4, 0x03},	// min_rampgen_con1
	{0xCF, 0x03},	// min_rampgen_con1

	{0xFF, 0xE8},	// Page
	{0x1A, 0x1C},	// rampgen_con_2

	{0x1B, 0x77},	// ppg_con_0
	{0x1C, 0x07},	// ppg_con_1
	{0x1D, 0x1C},	// ppg_con_2

	{0x1E, 0x05},	// npg_con //npg_clk_divideren<==BLC
	{0xFF, 0x96},	// Page
	{0xB4, 0x05},	// min_npg_con
	{0xC1, 0x05},	// mid_npg_con
	{0xCC, 0x05},	// max_npg_con

	{0xFF, 0xE8},	// Page
	{0x1F, 0x58},	// ldo_cpga_con_cpga_buffer_bypass[5]
	{0xFF, 0x96},	// Page
	{0xB2, 0x58},	// ldo_cpga_con_min
	{0xBF, 0x58},	// ldo_cpga_con_mid
	{0xCA, 0x58},	// ldo_cpga_con_max

	{0xFF, 0xE8},	// Page
	{0x20, 0x01},	// cpga ref_os(max)

	{0x21, 0x00},	// riseScanSx_H
	{0x22, 0x04},	// riseScanSx_L
	{0x23, 0x01},	// fallScanSx_H
	{0x24, 0x55},	// fallScanSx_L
	{0x25, 0x01},	// riseScanSx1_H
	{0x26, 0xC0},	// riseScanSx1_L
	{0x27, 0x00},	// fallScanSx1_H
	{0x28, 0x00},	// fallScanSx1_L

	{0x29, 0x00},	// riseScanSx_cds_H
	{0x2A, 0x04},	// riseScanSx_cds_L
	{0x2B, 0x01},	// fallScanSx_cds_H
	{0x2C, 0x55},	// fallScanSx_cds_L
	{0x2D, 0x01},	// riseScanSx_cds1_H
	{0x2E, 0x80},	// riseScanSx_cds1_L
	{0x2F, 0x00},	// fallScanSx_cds1_H
	{0x30, 0x00},	// fallScanSx_cds1_L

	{0x31, 0x00},	// RiseScanRx_H
	{0x32, 0x01},	// RiseScanRx_H
	{0x33, 0x00},	// FallScanRx_H
	{0x34, 0x08},	// FallScanRx_L

	{0x35, 0x01},	// riseScantx_H
	{0x36, 0x5F},	// riseScantx_L
	{0x37, 0x01},	// fallScantx_H
	{0x38, 0xC0},	// fallScantx_L

	{0x39, 0x01},	// RiseIntTx
	{0x3A, 0x3F},	// FallIntTx
	{0xFF, 0x96},	// Page
	{0xAF, 0x33},	// FallIntTx_Th
	{0xBC, 0x3F},	// min_FallIntTx
	{0xD4, 0x3F},	// max_FallIntTx

	{0xFF, 0xE8},	// Page
	{0x3B, 0x01},	// RiseIntRx
	{0x3C, 0x3F},	// FallIntRx

	{0xFF, 0x98},	// Page
	{0xEF, 0x3F},	// FallIntLatch (UR)

	{0xFF, 0xE8},	// Page
	{0x3D, 0x00},	// RiseQrst_H
	{0x3E, 0x20},	// RiseQrst_L
	{0x3F, 0x03},	// FallQrst_H
	{0x40, 0x8F},	// FallQrst_L
	{0xFF, 0x96},	// Page
	{0xBA, 0x8F},	// min_fallQrst
	{0xC6, 0x8F},	// mid_fallQrst
	{0xD2, 0x8F},	// max_fallQrst

	{0xFF, 0xE8},	// Page
	{0x41, 0x00},	// RiseQsig_H
	{0x42, 0x20},	// RiseQsig_L
	{0x43, 0x01},	// FallQsig_H
	{0x44, 0x48},	// FallQsig_L
	{0xFF, 0x96},	// Page
	{0xB9, 0x48},	// min_fallQsig
	{0xC5, 0x48},	// mid_fallQsig
	{0xD1, 0x48},	// max_fallQsig

	{0xFF, 0xE8},	// Page
	{0x45, 0x00},	// riseQos1_H
	{0x46, 0x20},	// riseQos1_L
	{0x47, 0x00},	// fallQos1_H
	{0x48, 0xA0},	// fallQos1_L
	{0x49, 0x00},	// riseQos2_H
	{0x4A, 0x20},	// riseQos2_L
	{0x4B, 0x00},	// fallQos2_H
	{0x4C, 0xB0},	// fallQos2_L

	{0x4D, 0x00},	// RiseCreset
	{0x4E, 0x1A},	//  
	{0x4F, 0x01},	// FallCreset_H
	{0x50, 0x30},	// FallCreset_L

	{0x51, 0x03},	// Rise_cpga_pdn_H
	{0x52, 0xFF},	// Rise_cpga_pdn_L
	{0x53, 0x00},	// Fall_cpga_pdn_H
	{0x54, 0x1C},	// Fall_cpga_pdn_L

	{0x55, 0x07},	// Rise_MillerEn_H
	{0x56, 0xB0},	// Rise_MillerEn_L
	{0x57, 0x01},	// Fall_MillerEn_H
	{0x58, 0x00},	// Fall_MillerEn_L

	{0x59, 0x00},	// Rise_QTRST_H
	{0x5A, 0x01},	// Rise_QTRST_L
	{0x5B, 0x01},	// Fall_QTRST_H
	{0x5C, 0x50},	// Fall_QTRST_L

	{0x5D, 0x01},	// Rise_QTRST_H
	{0x5E, 0x50},	// Rise_QTRST_L
	{0x5F, 0x03},	// Fall_QTRST_H
	{0x60, 0x92},	// Fall_QTRST_L

	{0x61, 0x00},	// FallIclamp_H
	{0x62, 0x04},	// FallIclamp_L
	{0x63, 0x00},	// RiseIclamp_H
	{0x64, 0x00},	// RiseIclamp_L

	{0x65, 0x03},	// riseqramp_H
	{0x66, 0x92},	// riseqramp_L
	{0x67, 0x07},	// fallqramp_H
	{0x68, 0xB2},	// fallqramp_L
	{0xFF, 0x96},	// Page
	{0xBB, 0xB2},	// minfallqramp
	{0xC7, 0xB2},	// midfallqramp
	{0xD3, 0xB2},	// maxfallqramp

	{0xFF, 0xE8},	// Page
	{0x69, 0x00},	// RiseQbitlinepdn_H
	{0x6A, 0x00},	// RiseQbitlinepdn_L
	{0x6B, 0x00},	// FallQbitlinepdn_H
	{0x6C, 0x00},	// FallQbitlinepdn_L

	{0x6D, 0x00},	// RiseRamp_prst_H
	{0x6E, 0x00},	// RiseRamp_prst_L
	{0x6F, 0x03},	// FallRamp_prst_H
	{0x70, 0xB0},	// FallRamp_prst_L
	{0x71, 0x00},	// RiseRamp_prst1_H
	{0x72, 0x00},	// RiseRamp_prst1_L
	{0x73, 0x00},	// FallRamp_prst1_H
	{0x74, 0x00},	// FallRamp_prst1_L

	{0x75, 0x03},	// riselatch_prst_H
	{0x76, 0x92},	// riselatch_prst_L
	{0x77, 0x03},	// Falllatch_prst_H
	{0x78, 0xB0},	// Falllatch_prst_L

	{0x79, 0x00},	// RiseTranE_H
	{0x7A, 0x50},	// RiseTranE_L
	{0x7B, 0x00},	// FallTranE_H
	{0x7C, 0x52},	// FallTranE_L
	{0x7D, 0x00},	// RiseTranO_H
	{0x7E, 0x52},	// RiseTranO_L
	{0x7F, 0x00},	// FallTranO_H
	{0x80, 0x54},	// FallTranO_L

	{0x85, 0x00},	// Rise scanlatch
	{0x86, 0x00},	// Rise scanlatch
	{0x87, 0x03},	// FallScanLatch_H
	{0x88, 0x8F},	// FallScanLatch_L

	{0x8A, 0x3F},	// FallIntLatch

	{0x96, 0x04},	// rise cpga_ref_sample
	{0x97, 0x00},	// rise cpga_ref_sample
	{0x98, 0x07},	// fall cpga_ref_sample
	{0x99, 0xB0},	// fall cpga_ref_sample

	{0x91, 0x01},	// LineStart_H
	{0x92, 0x5E},	// LineStart_L(rising 350 clk)

	{0x93, 0x07},	// linemode(tran timing control)

	{0xFF, 0xE4},	// Page
	{0x58, 0xC3},	// PHY_LP_TX_PARA

/*==================================*/
/* ADF Anlog                        */
/*==================================*/
	{0xFF, 0x95},	// Page
	{0xB8, 0x66},	// APThreshold
	
	{0xFF, 0x97},	// Page
	{0x58, 0xC5},	// AddedAnalogADFCtrl
	{0x59, 0x15},	// AddedDigitalADFCtrl
	{0x5C, 0xE8},	// u8An_Addr_H Manual Analog SNR Address
	
	{0x5D, 0x2E},	// u8AnEn0_Addr_1__FallSx_CDS1_L
	{0x5E, 0x60},	// u8AnEn0_Min_Value
	{0x5F, 0x60},	// u8AnEn0_Mid_Value
	{0x60, 0x80},	// u8AnEn0_Max_Value
	{0x61, 0x80},	// u8UpdateValue
	
	{0x62, 0x14},	// u8AnEn0_Addr_1_CPGA_Buffer_Bias
	{0x63, 0xC4},	// u8AnEn0_Min_Value
	{0x64, 0xC4},	// u8AnEn0_Mid_Value
	{0x65, 0xC7},	// u8AnEn0_Max_Value
	{0x66, 0xC7},	// u8UpdateValue
	
	{0x6C, 0x94},	// u8DiEn0_Addr_0_StdB
	{0x6D, 0xCD},	// u8DiEn0_Addr_1
	{0x6E, 0xAA},	// u8DiEn0_Threshold
	{0x6F, 0xFF},	// u8DiEn0_Min_Value
	{0x70, 0x00},	// u8DiEn0_Max_Value
	{0x71, 0x00},	// u8UpdateValue
	
	{0x72, 0x96},	// u8DiEn1_Addr_0_UnicolorZone
	{0x73, 0xE4},	// u8DiEn1_Addr_1
	{0x74, 0xAA},	// u8DiEn1_Threshold
	{0x75, 0x05},	// u8DiEn1_Min_Value
	{0x76, 0x01},	// u8DiEn1_Max_Value
	{0x77, 0x01},	// u8UpdateValue
	
	{0x78, 0xE8},	// u8DiEn2_Addr_0_Pixel_Bias
	{0x79, 0x17},	// u8DiEn2_Addr_1
	{0x7A, 0x33},	// u8DiEn2_Threshold
	{0x7B, 0x00},	// u8DiEn2_Min_Value
	{0x7C, 0x04},	// u8DiEn2_Max_Value
	{0x7D, 0x04},	// u8UpdateValue

/*==================================*/
/* Line Length & Flip               */
/*==================================*/
	{0xFF, 0xE8},	// Page
	{0x0A, 0x07},	//
	{0x0B, 0xB4},	//

	{0xFF, 0x98},	// Page
	{0xDF, 0x00},	// Flip

/*==================================*/
/* AE Gain Table                    */
/*==================================*/
	{0xFF, 0x93},	// Page
	{0xD8, 0x20},	// x1.8
	{0xD9, 0xA8},	// 
	{0xDA, 0x05},	// 

	{0xDB, 0x0E},	// x2.0
	{0xDC, 0xA8},	// 
	{0xDD, 0x15},	// 

	{0xDE, 0x0E},	// x3.0 
	{0xDF, 0xA8},	// 
	{0xE0, 0x05},	// 

	{0xE1, 0x0F},	// x4.0 
	{0xE2, 0xE8},	// 
	{0xE3, 0x05},	// 

	{0xE4, 0x0A},	// x5.0 
	{0xE5, 0xA8},	// 
	{0xE6, 0x01},	// 

	{0xE7, 0x0E},	// x6.0
	{0xE8, 0xA8},	// 
	{0xE9, 0x01},	// 

	{0xEA, 0x0F},	// x7.0 
	{0xEB, 0xA8},	// 
	{0xEC, 0x01},	// 

	{0xED, 0x0F},	// x8.0
	{0xEE, 0xE8},	// 
	{0xEF, 0x01},	// 

	{0xF0, 0x0F},	// x9.0
	{0xF1, 0xF8},	// 
	{0xF2, 0x01},	// 

/*==================================*/						
/* PT : AGAIN Control               */		
/*==================================*/	
	{0xFF, 0x97},	// Page
	{0x82, 0x1E},	// UsrAGain_0
	{0x83, 0x1E},	// UsrAGain_1
	{0x84, 0x2D},	// UsrAGain_2
	{0x85, 0x38},	// UsrAGain_3
	{0x86, 0x48},	// UsrAGain_4
	{0x87, 0x58},	// UsrAGain_5
	{0x88, 0x68},	// UsrAGain_6
	{0x89, 0x78},	// UsrAGain_7
	{0x8A, 0x88},	// UsrAGain_8

/*==================================*/						
/* PT : AGAIN Control               */		
/*==================================*/	
	{0x98, 0x1C},	// AE_UsrDeminoAGain_0
	{0x99, 0x1D},	// AE_UsrDeminoAGain_1
	{0x9A, 0x2D},	// AE_UsrDeminoAGain_2
	{0x9B, 0x38},	// AE_UsrDeminoAGain_3
	{0x9C, 0x48},	// AE_UsrDeminoAGain_4
	{0x9D, 0x58},	// AE_UsrDeminoAGain_5
	{0x9E, 0x68},	// AE_UsrDeminoAGain_6
	{0x9F, 0x78},	// AE_UsrDeminoAGain_7
	{0xA0, 0x88},	// AE_UsrDeminoAGain_8

/*==================================*/
/* ISP Global Control #1            */
/*==================================*/   
	{0xFF, 0xE1},	// Page
	{0x20, 0x00},	// EDE: Optiong
	{0x21, 0x22},	// EDE: SlopeGain
	{0x22, 0x44},	// EDE: EDELuAdpCtl
	{0x23, 0x00},	// EDE: PreCoringPt
	{0x24, 0x00},	// EDE: x1 point
	{0x25, 0x16},	// EDE: x1 point
	{0x26, 0x00},	// EDE: x2 point
	{0x27, 0x98},	// EDE: x2 point
	{0x28, 0x09},	// EDE: TransFuncSl1
	{0x29, 0x22},	// EDE: TransFuncSl2
	{0x2A, 0x00},	// EDE: Adaptation left margin
	{0x2B, 0x4C},	// EDE: Adaptation right margin
	{0x2C, 0x08},	// EDE: RGB edge threshol
	{0x2D, 0x00},	// EDE: SmallOffset

	{0x30, 0x48},	// EDESaThrd1
	{0x31, 0x60},	// EDESaThrd2
	{0x32, 0x00},	// EDESaSlope

	{0xFF, 0xE0},	// Page
	{0xD0, 0x01},	// BCD
	{0xD1, 0x00},	// BCDFcsThrd
	{0x61, 0x17},	// CDC Slash pattern Off

	{0xFF, 0xE1},	// Page
	{0xE0, 0x00},	// RDC Enable
	{0xE1, 0x00},	// RDC_R0
	{0xE2, 0x22},	// RDC_R1
	{0xE3, 0x40},	// RDC_R2
	{0xEA, 0x00},	// RDC_B0
	{0xEB, 0x22},	// RDC_B1
	{0xEC, 0x40},	// RDC_B2

/*==================================*/						
/* LNF                        	    */
/*==================================*/
	{0xFF, 0xE0},	// Page
	{0x80, 0x66},	// LNFClrSmRLeft
	{0x81, 0x81},	// LNFClrSmRRight
	{0x82, 0x8A},	// LNFClrSmRBottom
	{0x83, 0xA2},	// LNFClrSmRTop
	{0x84, 0x0E},	// LNFClrSmTh

	{0x85, 0x01},	// LNFGzRgTh
	{0x86, 0x82},	// LNFGzSmTh

	{0x87, 0x08},	// LNFLLimit
	{0x88, 0x3C},	// LNFHLimit
	{0x89, 0x00},	// LNFThAdd
	{0x8A, 0x0A},	// LNFTh0
	{0x8B, 0x06},	// LNFTh1
	{0x8C, 0x00},	// LNFTh2
	{0x8D, 0x00},	// LNFTh3
	{0x8E, 0x00},	// LNFTh4
	{0x8F, 0x00},	// LNFTh5

/*==================================*/						
/* ADF LNF      	                  */
/*==================================*/
	{0xFF, 0x97},	// Page
	{0x8B, 0x42},	//ADF_Threshold_LNF

	{0x8C, 0x18},	//ADF_Min_LNFLLimit
	{0x8E, 0x08},	//ADF_Min_LNFTh0
	{0x90, 0x06},	//ADF_Min_LNFTh1
	{0x92, 0x08},	//ADF_Min_LNFClrSmTh

	{0x8D, 0x18},	//ADF_Max_LNFLLimit
	{0x8F, 0x03},	//ADF_Max_LNFTh0
	{0x91, 0x01},	//ADF_Max_LNFTh1
	{0x93, 0x00},	// ADF_Max_LNFClrSmTh

/*==================================*/
/* NCNF                       	    */
/*==================================*/
	{0xFF, 0xE1},	// Page
	{0x40, 0x07},	// YunFuncEn
	{0x41, 0xF0},	// CNFCtrl_A
	{0x42, 0x18},	// CNFCtrl_B
	{0x43, 0x75},	// CNFCtrl_C
	{0x44, 0x00},	// CNF_AdpCtrl

/*==================================*/
/* AE                               */
/*==================================*/
	{0xFF, 0x93},	// Page
	{0x07, 0x01},	// Variable Frame
	{0x0B, 0x11},	// Weight_0
	{0x0C, 0x11},	// Weight_1
	{0x0D, 0x11},	// Weight_2
	{0x0E, 0xC8},	// Weight_3
	{0x0F, 0x18},	// Weight_4
	{0x10, 0xC1},	// Weight_5
	{0x11, 0xCF},	// Weight_6
	{0x12, 0x11},	// Weight_7
	{0x13, 0xC8},	// Weight_8
	{0x14, 0x18},	// Weight_9
	{0x15, 0x11},	// Weight_10
	{0x16, 0x11},	// Weight_11
	{0x17, 0x01},	// Weight_12

	{0x18, 0x05},	// AE Speed
	{0x19, 0x03},	// u8AeLockBnd
	{0x1A, 0x06},	// u8AeHoldBnd

	{0x1B, 0x08},	// Analog gain Max

	{0x1C, 0x00}, // 50Hz Time Step
	{0x1D, 0x05},
	{0x1E, 0x74},
	{0x1F, 0x7C},
	
	{0x22, 0x3B},	// Outdoor Target
	{0x23, 0x3B},	// indoor Target

	{0x46, 0x08},	// LuxGainTB_0
	{0x47, 0x10},	// LuxGainTB_1
	{0x48, 0x38},	// LuxGainTB_2
	{0x49, 0x88},	// LuxGainTB_3

	{0x4A, 0x00},	// LuxTimeTB_0
	{0x4B, 0x80},	// LuxTimeTB_0
	{0x4C, 0x00},	// LuxTimeTB_1
	{0x4D, 0xD0},	// LuxTimeTB_1
	{0x4E, 0x02},	// LuxTimeTB_2
	{0x4F, 0x00},	// LuxTimeTB_2
	{0x50, 0x04},	// LuxTimeTB_3
	{0x51, 0x80},	// LuxTimeTB_3

	{0x72, 0x0D},	// 71.5Mhz SCLK
	{0x73, 0xF7},	// 

	{0x79, 0xB8},	// Gain Max
	{0x7A, 0x48},	// Gain 3lut
	{0x7B, 0x38},	// Gain 2lut
	{0x7C, 0x28},	// Gain 1lut
	{0x7D, 0x1D},	// Gain Min

	{0x7E, 0x03},	// MinFrame 8fps
	{0x7F, 0x21},	//

	{0x82, 0x0F},	// Time4lut 60hz
	{0x83, 0x0A},	// Time3lut 60hz
	{0x84, 0x08},	// Time2lut 60hz
	{0x85, 0x08},	// Time1lut 60hz

	{0x86, 0x0C},	// TimeMax50Hz	:
	{0x87, 0x08},	// Time3Lux50Hz	: 8.5fps
	{0x88, 0x06},	// Time2Lut50Hz	: 10fps
	{0x89, 0x06},	// Time1Lut50Hz	: 15fps

	{0x8A, 0x05},	// 60Hz Frame Rate
	{0x8B, 0x04},	// 

	{0x8C, 0x04},	// 50Hz Frame Rate
	{0x8D, 0xF4},	// 

	{0x8E, 0x30},	// LuxLevel_Y3
	{0x8F, 0x20},	// LuxLevel_Y2
	{0x90, 0x02},	// LuxLevel_Y1
	{0x91, 0x00},	// LuxLevel_Yx

	{0x9A, 0x03},	// TimeNum0
	{0xB9, 0x05},	// FrameOffset
	{0xBE, 0x00},	// UserGTh

	{0x98, 0x2D},
	{0x99, 0x1D},

	{0xC5, 0x00},	// UpperFine-H
	{0xC6, 0x00},	// UpperFine-L
	{0xC7, 0x00},	// LowerFine-H
	{0xC8, 0x01},	// LowerFine-L
	{0xC9, 0x05},	// DarkOffset
	{0xCA, 0x05},	// DarkTh
	{0xCB, 0x05},	// MinEXP 10=1/1100sec
	{0xCC, 0x06},	// MinEXPth DNP4300Lux=20
	{0xCD, 0x00},	// AE speed
	
	{0xFF, 0x97},	// MinimumExTh
	{0x37, 0x06},	//

    {0xFF, 0x93},	
	{0x2A, 0x05},	// Fast AE
	{0x2B, 0x00},	// Dgain
	{0x2C, 0x00},	// CurTime
	{0x2D, 0x0A},
	{0x2E, 0xE8},
	{0x2F, 0xF8},

	{0xB1, 0x04},	// FineTime
	{0xB2, 0x70},
	{0xB3, 0x01},	// CoarseTime
	{0xB4, 0x6A},

	{0x08, 0x3D},	// AE Renew - 50Hz

/*==================================*/						
/* AWB STE			                    */
/*==================================*/
	{0xFF, 0xE1},	// Page
	{0x9A, 0x01},	// AWBCtrl
	{0x9C, 0x08},	// AWBLuThL
	{0x9D, 0xC0},	// AWBLuThH
	{0xA0, 0x00},	// AWBZone0LTx - Flash
	{0xA1, 0x00},	// AWBZone0LTy
	{0xA2, 0x00},	// AWBZone0RBx
	{0xA3, 0x00},	// AWBZone0RBy
	{0xA4, 0x90},	// AWBZone1LTx - Cloudy
	{0xA5, 0x6B},	// AWBZone1LTy
	{0xA6, 0xA7},	// AWBZone1RBx
	{0xA7, 0x4B},	// AWBZone1RBy
	{0xA8, 0x71},	// AWBZone2LTx - D65
	{0xA9, 0x63},	// AWBZone2LTy
	{0xAA, 0x8F},	// AWBZone2RBx
	{0xAB, 0x49},	// AWBZone2RBy
	{0xAC, 0x6C},	// AWBZone3LTx - Fluorecent
	{0xAD, 0x76},	// AWBZone3LTy
	{0xAE, 0x8F},	// AWBZone3RBx
	{0xAF, 0x50},	// AWBZone3RBy
	{0xB0, 0x4B},	// AWBZone4LTx - CWF
	{0xB1, 0x78},	// AWBZone4LTy
	{0xB2, 0x6B},	// AWBZone4RBx
	{0xB3, 0x50},	// AWBZone4RBy
	{0xB4, 0x50},	// AWBZone5LTx - TL84
	{0xB5, 0x88},	// AWBZone5LTy
	{0xB6, 0x6F},	// AWBZone5RBx
	{0xB7, 0x71},	// AWBZone5RBy
	{0xB8, 0x4A},	// AWBZone6LTx - A
	{0xB9, 0x99},	// AWBZone6LTy
	{0xBA, 0x64},	// AWBZone6RBx
	{0xBB, 0x83},	// AWBZone6RBy
	{0xBC, 0x41},	// AWBZone7LTx - Horizon
	{0xBD, 0xB4},	// AWBZone7LTy
	{0xBE, 0x5A},	// AWBZone7RBx
	{0xBF, 0x96},	// AWBZone7RBy
	{0xC0, 0x00},	// AWBZone8LTx - Skin
	{0xC1, 0x00},	// AWBZone8LTy
	{0xC2, 0x00},	// AWBZone8RBx
	{0xC3, 0x00},	// AWBZone8RBy

	{0xFF, 0x94},	// Page
	{0x0D, 0x05},	// FinalRGain
	{0x0E, 0x00},	// 
	{0x11, 0x04},	// FinalBGain
	{0x12, 0xB0},

	{0xFF, 0x95},	// Page
	{0x00, 0x05},	// StdRGain
	{0x01, 0x00},
	{0xFF, 0x94},	// Page
	{0xCC, 0x04},	// StdBGain
	{0xCD, 0xFF},

/*==================================*/						
/* AWB				                      */
/*==================================*/											
	{0xFF, 0x93},	// Page
	{0xF4, 0x8B},	// AWBCtrl
	{0xF5, 0x01},	//
	{0xFF, 0x94},	// Page
	{0x00, 0x00},	// LockRatio
	{0x03, 0x01},	// MinGrayCnt
	{0x04, 0x80},	// MinGrayCnt
	{0x15, 0xD4},	// SkinWinCntTh
	{0x21, 0x28},	// SkinYTh
	{0x22, 0x00},	// SkinHoldHitCnt
	{0x23, 0x0F},	// SkinHoldHitCnt
	{0x2C, 0x65},	// SkinTop2
	{0x2D, 0x80},	// SkinTop2LS1Ratio
	{0x2E, 0x20},	// SkinTop2LS2Ratio
	{0x33, 0x10},	// SkinTop2LSHys
	{0x34, 0x54},	// SkinLTx
	{0x35, 0xBD},	// SkinLTy
	{0x36, 0x74},	// SkinLBx
	{0x37, 0x9D},	// SkinLBy
	{0x39, 0x4F},	// UniCThrY
	{0x3E, 0x0C},	// UniCGrayCntThr_0
	{0x3F, 0x80},	// UniCGrayCntThr_1
	{0xC9, 0x0C},	// StdLS_rw_CWF
	{0xCE, 0x00},	// AWB_LuxConst1_0
	{0xCF, 0x00},	// AWB_LuxConst1_1
	{0xD0, 0x06},	// AWB_LuxConst1_2
	{0xD1, 0x20},	// AWB_LuxConst1_3
	{0xD2, 0x07},	// AWB_LuxConst2_0
	{0xD3, 0x53},	// AWB_LuxConst2_1
	{0xD4, 0x00},	// AWB_LuxConst2_2
	{0xD5, 0x00},	// AWB_LuxConst2_3
	
	{0xDA, 0x00},	// Threshold_indoor
	{0xDB, 0x30},	// 
	{0xDC, 0x01},	// Threshold_outdoor	
	{0xDD, 0x00},	// 
	
	{0xE6, 0x00},	// AWB_Weight_Genernal_0_Flash
	{0xE7, 0x00},	// AWB_Weight_Genernal_1_Cloudy
	{0xE8, 0x20},	// AWB_Weight_Genernal_2_D65
	{0xE9, 0x00},	// AWB_Weight_Genernal_3_Fluorescent
	{0xEA, 0x20},	// AWB_Weight_Genernal_4_CWF
	{0xEB, 0x1A},	// AWB_Weight_Genernal_5_TL84
	{0xEC, 0x1D},	// AWB_Weight_Genernal_6_A
	{0xED, 0x00},	// AWB_Weight_Genernal_7_Horizon
	{0xEE, 0x00},	// AWB_Weight_Indoor_0_Flash
	{0xEF, 0x00},	// AWB_Weight_Indoor_1_Cloudy
	{0xF0, 0x00},	// AWB_Weight_Indoor_2_D65
	{0xF1, 0x1A},	// AWB_Weight_Indoor_3_Fluorescent
	{0xF2, 0x1A},	// AWB_Weight_Indoor_4_CWF
	{0xF3, 0x1A},	// AWB_Weight_Indoor_5_TL84
	{0xF4, 0x00},	// AWB_Weight_Indoor_6_A
	{0xF5, 0x18},	// AWB_Weight_Indoor_7_Horizon
	{0xF6, 0x00},	// AWB_Weight_Outdoor_0_Flash
	{0xF7, 0x18},	// AWB_Weight_Outdoor_1_Cloudy
	{0xF8, 0x00},	// AWB_Weight_Outdoor_2_D65
	{0xF9, 0x20},	// AWB_Weight_Outdoor_3_Fluorescent
	{0xFA, 0x00},	// AWB_Weight_Outdoor_4_CWF
	{0xFB, 0x00},	// AWB_Weight_Outdoor_5_TL84
	{0xFC, 0x00},	// AWB_Weight_Outdoor_6_A
	{0xFD, 0x00},	// AWB_Weight_Outdoor_7_Horizon
	
	{0xFF, 0x96},	// Page
	{0xE4, 0x05},	// AWB_unicolorzone
	
	{0xFF, 0x94},	// Page
	{0x4A, 0x04},	// Min Rgain
	{0x4B, 0x28},	// 
	{0x4C, 0x06},	// Max Rgain
	{0x4D, 0x80},	// 
	{0x4E, 0x03},	// Min Bgain
	{0x4F, 0xB8},	// 
	{0x50, 0x05},	// Max BGain
	{0x51, 0xE8},	// 
	
	{0x52, 0x07},	// LSValue0
	{0x53, 0x04},	// Min Rgain
	{0x54, 0x10},	// 
	{0x55, 0x06},	// Max Rgain
	{0x56, 0x00},	// 
	{0x57, 0x02},	// Min Bgain
	{0x58, 0x80},	// 
	{0x59, 0x05},	// Max BGain
	{0x5A, 0xF0},	// 
	
	{0x5B, 0x06},	// LSValue1
	{0x5C, 0x04},	// Min Rgain
	{0x5D, 0x48},	// 
	{0x5E, 0x07},	// Max Rgain
	{0x5F, 0x40},	// 
	{0x60, 0x02},	// Min Bgain
	{0x61, 0x80},	// 
	{0x62, 0x05},	// Max Bgain
	{0x63, 0xF8},	// 
	
	{0xFF, 0x94},	// Page
	{0x02, 0x10},	// AWBConvSpeedSpecial
	
/*==================================*/
/* UR                               */
/*==================================*/
	{0xFF, 0xE1},	// Page
	{0x9B, 0x22},	//AWBTrim

/*==================================*/						
/* CCM    			                    */
/*==================================*/	
	{0xFF, 0x94},	// Page
	{0x7B, 0x00},	// D65_CCM_11
	{0x7C, 0x7F},	// D65_CCM_11
	{0x7D, 0xFF},	// D65_CCM_12
	{0x7E, 0xC2},	// D65_CCM_12
	{0x7F, 0xFF},	// D65_CCM_13
	{0x80, 0xFF},	// D65_CCM_13
	{0x81, 0xFF},	// D65_CCM_21
	{0x82, 0xE9},	// D65_CCM_21
	{0x83, 0x00},	// D65_CCM_22
	{0x84, 0x67},	// D65_CCM_22
	{0x85, 0xFF},	// D65_CCM_23
	{0x86, 0xF0},	// D65_CCM_23
	{0x87, 0xFF},	// D65_CCM_31
	{0x88, 0xFE},	// D65_CCM_31
	{0x89, 0xFF},	// D65_CCM_32
	{0x8A, 0xC0},	// D65_CCM_32
	{0x8B, 0x00},	// D65_CCM_33
	{0x8C, 0x82},	// D65_CCM_33


//CWF lgiht             
	{0x8D, 0x00},	// CWF_CCM_11
	{0x8E, 0x79},	// CWF_CCM_11
	{0x8F, 0xFF},	// CWF_CCM_12
	{0x90, 0xC7},	// CWF_CCM_12
	{0x91, 0xFF},	// CWF_CCM_13
	{0x92, 0xFF},	// CWF_CCM_13
	{0x93, 0xFF},	// CWF_CCM_21
	{0x94, 0xEB},	// CWF_CCM_21
	{0x95, 0x00},	// CWF_CCM_22
	{0x96, 0x63},	// CWF_CCM_22
	{0x97, 0xFF},	// CWF_CCM_23
	{0x98, 0xF1},	// CWF_CCM_23
	{0x99, 0xFF},	// CWF_CCM_31
	{0x9A, 0xFF},	// CWF_CCM_31
	{0x9B, 0xFF},	// CWF_CCM_32
	{0x9C, 0xC6},	// CWF_CCM_32
	{0x9D, 0x00},	// CWF_CCM_33
	{0x9E, 0x7C},	// CWF_CCM_33

	{0x9F, 0x00},	// A_CCM_11
	{0xA0, 0x54},	// A_CCM_11
	{0xA1, 0xFF},	// A_CCM_12
	{0xA2, 0xF4},	// A_CCM_12
	{0xA3, 0xFF},	// A_CCM_13
	{0xA4, 0xF8},	// A_CCM_13
	{0xA5, 0xFF},	// A_CCM_21
	{0xA6, 0xFC},	// A_CCM_21
	{0xA7, 0x00},	// A_CCM_22
	{0xA8, 0x5E},	// A_CCM_22
	{0xA9, 0xFF},	// A_CCM_23
	{0xAA, 0xE6},	// A_CCM_23
	{0xAB, 0xFF},	// A_CCM_31
	{0xAC, 0xF1},	// A_CCM_31
	{0xAD, 0xFF},	// A_CCM_32
	{0xAE, 0xD2},	// A_CCM_32
	{0xAF, 0x00},	// A_CCM_33
	{0xB0, 0x7D},	// A_CCM_33

	{0xFF, 0x97},	// Page
	{0x24, 0x01},	// CCM LuxThreshold
	{0x25, 0x00},	// CCM LuxThreshold
	{0xFF, 0x95},	// Page
	{0xB3, 0xFF},	// Outdoor CCM On

	{0xFF, 0x96},	// Page
	{0xEA, 0x00},	// Outdoor_CCM_11
	{0xEB, 0x72},	// Outdoor_CCM_11
	{0xEC, 0xFF},	// Outdoor_CCM_12
	{0xED, 0xE6},	// Outdoor_CCM_12
	{0xEE, 0xFF},	// Outdoor_CCM_13
	{0xEF, 0xE8},	// Outdoor_CCM_13
	{0xF0, 0xFF},	// Outdoor_CCM_21
	{0xF1, 0xE8},	// Outdoor_CCM_21
	{0xF2, 0x00},	// Outdoor_CCM_22
	{0xF3, 0x6C},	// Outdoor_CCM_22
	{0xF4, 0xFF},	// Outdoor_CCM_23
	{0xF5, 0xEC},	// Outdoor_CCM_23
	{0xF6, 0xFF},	// Outdoor_CCM_31
	{0xF7, 0xF9},	// Outdoor_CCM_31
	{0xF8, 0xFF},	// Outdoor_CCM_32
	{0xF9, 0xD8},	// Outdoor_CCM_32
	{0xFA, 0x00},	// Outdoor_CCM_33
	{0xFB, 0x6F},	// Outdoor_CCM_33	

/*==================================*/
/* ADF                              */
/*==================================*/	
	{0xFF, 0x95},	// Page
	{0xB2, 0xFF},	// u8FuncCtrl1
	{0xB3, 0xFF},	// u8FuncCtrl2
	{0xB4, 0xFF},	// u8FuncCtrl3
	{0xB5, 0x90},	// Flag
	{0xB6, 0x04},	// Flag1

	{0xBF, 0xFF},	// RgbYcFunc_Normal
	{0xBE, 0xFB},	// RgbYcFunc_Dark

/*==================================*/						
/* ADF BLC      		                */
/*==================================*/
	{0xC0, 0x04},	// ADF_ThrLevel_BLC
	{0xC2, 0x00},	// ADF_Min_BLC
	{0xC3, 0x00},	// ADF_Max_BLC

/*==================================*/						
/* ADF BGT      		                */
/*==================================*/
	{0xFF, 0x96},	// Page
	{0x3F, 0x42},	// ADF_ThrLevel_BGT
	{0x40, 0x00},	// ADF_Min_BGT
	{0x41, 0x00},	// ADF_Max_BGT

/*==================================*/						
/* ADF CNT      		                */
/*==================================*/
	{0x42, 0x76},	// ADF_ThrLevel_CNT
	{0x43, 0x00},	// ADF_Min_CON
	{0x44, 0x00},	// ADF_Max_CON

/*==================================*/						
/* ADF LSC      	                  */
/*==================================*/
	{0xFF, 0x95},	// Page
	{0xC6, 0x53},	// ADF_ThrLevel_LVLSC
	{0xC7, 0xBA},	// ADF_ThrLevel_LSLSC
	{0xC8, 0xA0},	// ADF_MinVal_LVLSC_VAL
	{0xC9, 0xFF},	// ADF_MaxVal_LVLSC_VAL
	
	//Min Shading
	{0xCA, 0xB0},	// Rgain0
	{0xCB, 0x38},	// Rgain1
	{0xCC, 0x05},	// Rgain2
	{0xCD, 0x02},	// Rgain3
	
	{0xCE, 0x98},	// GGain0
	{0xCF, 0x14},	// GGain1
	{0xD0, 0x00},	// GGain2
	{0xD1, 0x00},	// GGain3
	
	{0xD2, 0xA8},	// Bgain0
	{0xD3, 0x18},	// Bgain1	
	{0xD4, 0x08},	// Bgain2
	{0xD5, 0x04},	// Bgain3
	
	//Max Shading
	{0xD6, 0xA8},	// Rgain0
	{0xD7, 0x30},	// Rgain1
	{0xD8, 0x08},	// Rgain2
	{0xD9, 0x04},	// Rgain3
	
	{0xDA, 0x80},	// Ggain0
	{0xDB, 0x10},	// Ggain1
	{0xDC, 0x00},	// Ggain2
	{0xDD, 0x00},	// Ggain3
	
	{0xDE, 0xB0},	// BGain0
	{0xDF, 0x19},	// BGain1
	{0xE0, 0x10},	// BGain2
	{0xE1, 0x0D},	// BGain3

/*==================================*/
/* Gamma                            */
/*==================================*/
	{0xFF, 0x96},	// Page
	{0x46, 0x01},	// Dark Gamma Threshold
	{0x7A, 0x00},	// Dark_Gamma_0
	{0x7B, 0x02},	// Dark_Gamma_1
	{0x7C, 0x04},	// Dark_Gamma_2
	{0x7D, 0x08},	// Dark_Gamma_3
	{0x7E, 0x0C},	// Dark_Gamma_4
	{0x7F, 0x10},	// Dark_Gamma_5
	{0x80, 0x18},	// Dark_Gamma_6
	{0x81, 0x20},	// Dark_Gamma_7
	{0x82, 0x28},	// Dark_Gamma_8
	{0x83, 0x30},	// Dark_Gamma_9
	{0x84, 0x40},	// Dark_Gamma_10
	{0x85, 0x60},	// Dark_Gamma_11
	{0x86, 0x80},	// Dark_Gamma_12
	{0x87, 0xA0},	// Dark_Gamma_13
	{0x88, 0xC0},	// Dark_Gamma_14
	{0x89, 0xE0},	// Dark_Gamma_15
	{0x8A, 0xFF},	// Dark_Gamma_16
	
	{0x45, 0x61},	// Gamma Threshold
	{0x47, 0x00},	// Min_Gamma_0
	{0x48, 0x05},	// Min_Gamma_1
	{0x49, 0x0A},	// Min_Gamma_2
	{0x4A, 0x16},	// Min_Gamma_3
	{0x4B, 0x23},	// Min_Gamma_4
	{0x4C, 0x2E},	// Min_Gamma_5
	{0x4D, 0x42},	// Min_Gamma_6
	{0x4E, 0x56},	// Min_Gamma_7
	{0x4F, 0x67},	// Min_Gamma_8
	{0x50, 0x72},	// Min_Gamma_9
	{0x51, 0x88},	// Min_Gamma_10
	{0x52, 0xAC},	// Min_Gamma_11
	{0x53, 0xC3},	// Min_Gamma_12
	{0x54, 0xD5},	// Min_Gamma_13
	{0x55, 0xE3},	// Min_Gamma_14
	{0x56, 0xF0},	// Min_Gamma_15
	{0x57, 0xFF},	// Min_Gamma_16
	
	{0x58, 0x00},	// Max_Gamma_0
	{0x59, 0x01},	// Max_Gamma_1
	{0x5A, 0x05},	// Max_Gamma_2
	{0x5B, 0x15},	// Max_Gamma_3
	{0x5C, 0x22},	// Max_Gamma_4
	{0x5D, 0x2C},	// Max_Gamma_5
	{0x5E, 0x40},	// Max_Gamma_6
	{0x5F, 0x51},	// Max_Gamma_7
	{0x60, 0x60},	// Max_Gamma_8
	{0x61, 0x6B},	// Max_Gamma_9
	{0x62, 0x81},	// Max_Gamma_10
	{0x63, 0xA2},	// Max_Gamma_11
	{0x64, 0xBC},	// Max_Gamma_12
	{0x65, 0xD1},	// Max_Gamma_13
	{0x66, 0xE3},	// Max_Gamma_14
	{0x67, 0xF1},	// Max_Gamma_15
	{0x68, 0xFF},	// Max_Gamma_16
	
	//Outdoor        
	{0x69, 0x00},	// gAdf_u8OutGMAVal_0
	{0x6A, 0x03},	// gAdf_u8OutGMAVal_1 
	{0x6B, 0x08},	// gAdf_u8OutGMAVal_2 
	{0x6C, 0x15},	// gAdf_u8OutGMAVal_3
	{0x6D, 0x26},	// gAdf_u8OutGMAVal_4 
	{0x6E, 0x33},	// gAdf_u8OutGMAVal_5 
	{0x6F, 0x48},	// gAdf_u8OutGMAVal_6 
	{0x70, 0x58},	// gAdf_u8OutGMAVal_7 
	{0x71, 0x68},	// gAdf_u8OutGMAVal_8 
	{0x72, 0x74},	// gAdf_u8OutGMAVal_9 
	{0x73, 0x88},	// gAdf_u8OutGMAVal_10 
	{0x74, 0xA4},	// gAdf_u8OutGMAVal_11 
	{0x75, 0xBA},	// gAdf_u8OutGMAVal_12 
	{0x76, 0xCE},	// gAdf_u8OutGMAVal_13 
	{0x77, 0xE0},	// gAdf_u8OutGMAVal_14 
	{0x78, 0xF0},	// gAdf_u8OutGMAVal_15 
	{0x79, 0xFF},	// gAdf_u8OutGMAVal_16

/*==================================*/
/* ADF GDC      	                  */
/*==================================*/
	{0xFF, 0x95},	// Page
	{0xE3, 0xA4},	// ADF_ThrLevel_GDC
	{0xE4, 0x50},	// ADF_STVAL_GDC_TH1
	{0xE5, 0x70},	// ADF_STVAL_GDC_TH2
	{0xE6, 0x40},	// ADF_Min_GDC_Th1
	{0xE7, 0x60},	// ADF_Min_GDC_Th2
	{0xE8, 0x30},	// ADF_Max_GDC_Th1
	{0xE9, 0x40},	// ADF_Max_GDC_Th2
	{0xEA, 0x0E},	// ADF_EndVal_GDC_TH1
	{0xEB, 0x30},	// ADF_EndVal_GDC_TH2

	{0xEC, 0x84},	// ADF_ThrLevel_GDC_SASP
	{0xED, 0x00},	// ADF_MinVal_GDC_SASP
	{0xEE, 0x00},	// ADF_MaxVal_GDC_SASP

/*==================================*/						
/* ADF NSF      	                  */
/*==================================*/
	{0xEF, 0xA5},	// ADF_ThrLevel_NSF
	{0xF0, 0x30},	// ADF_STVal_NSF_TH1
	{0xF1, 0x28},	// ADF_STVal_NSF_TH2
	{0xF2, 0x16},	// ADF_MinVal_NSF_TH1
	{0xF3, 0x18},	// ADF_MinVal_NSF_TH2
	{0xF4, 0x10},	// ADF_MaxVal_NSF_TH1
	{0xF5, 0x18},	// ADF_MaxVal_NSF_TH2
	{0xF6, 0x0D},	// ADF_EndVal_NSF_TH1
	{0xF7, 0x10},	// ADF_EndVal_NSF_TH2
	
	{0xF8, 0xED},	// ADF_ThrNoiseLevel_NSF
	{0xF9, 0x10},	// ADF_NSF_Noisegain
	{0xFA, 0xBA},	// ADF_ThrLevel_NSF_SASP
	{0xFB, 0x00},	// ADF_MinVal_NSF_SASP
	{0xFC, 0xF8},	// ADF_MaxVal_NSF_SASP
	
	{0xFF, 0xE0},	// Page
	{0xC2, 0x00},	// NSFTh3
	{0xC3, 0x10},	// NSFTh4
	{0xC7, 0x38},	// ADF_NSFSaThrd1
	{0xC8, 0x70},	// ADF_NSFSaThrd2
	{0xC9, 0x08},	// ADF_NSFNoiseThrd1
	{0xCA, 0x14},	// ADF_NSFNoiseThrd2
	{0xCB, 0x08},	// ADF_NSFNoiseThrd3

/*==================================*/
/* ADF EDE      		                */
/*==================================*/
	{0xFF, 0x95},	// Page
	{0xFD, 0xA9},	// ADF_EdgGain_Lux
	{0xFF, 0x96},	// Page
	{0x00, 0x00},	// ADF_MinVal_EdgGain
	{0x01, 0x00},	// ADF_MaxVal_EdgGain
	
	{0x02, 0xCB},	// ADF_ThrLevel_EDEOption
	{0x03, 0x30},	// ADF_Indoor_EDEOption
	{0x04, 0x30},	// ADF_Outdoor_EDEOption
	{0x05, 0x30},	// ADF_Indoor_EDESmEdgThrd
	{0x06, 0x16},	// ADF_Outdoor_EDESmEdgThrd
	
	{0x07, 0x53},	// ADF_ThrLevel_EDE_S1L
	{0x08, 0x76},	// ADF_ThrLevel_EDE_S1H
	{0x09, 0x08},	// ADF_EDE_STVal_SL1
	{0x0A, 0x09},	// ADF_EDE_Mid1Val_SL1
	{0x0B, 0x09},	// ADF_EDE_Mid2Val_SL1
	{0x0C, 0x0C},	// ADF_EDE_EndVal_SL1
	
	{0x0D, 0xA3},	// ADF_ThrLevel_Edge
	{0x0E, 0x06},	// ADF_Min_Coring
	{0x10, 0x0A},	// ADF_Min_Edge_Slope2
	{0x12, 0x04},	// ADF_Min_Edge_SmallOffset
	{0x14, 0x33},	// ADF_Min_Edge_Slope
	
	{0x0F, 0x04},	// ADF_Max_Coring
	{0x11, 0x0A},	// ADF_Max_Edge_Slope2
	{0x13, 0x04},	// ADF_Max_Edge_SmallOffset
	{0x15, 0x34},	// ADF_Max_Edge_Slope
	
	{0x16, 0x87},	// ADF_ThrLevel_EDE_RB
	{0x17, 0x03},	// MinVal_EDE_RBTH
	{0x18, 0x33},	// MaxVal_EDE_RBTH
	{0x19, 0x98},	// ThrLevel_EDE_SASP
	{0x1A, 0xF4},	// MinVal_EDE_SASP
	{0x1B, 0xF4},	// MaxVal_EDE_SASP
	
	{0x1C, 0x51},	// ADF_DEDE_TreLux1
	{0x1D, 0x76},	// ADF_DEDE_TreLux2
	{0x1E, 0x00},	// ADF_DEDE_STVal_XP1
	{0x1F, 0x68},	// 
	{0x20, 0x00},	// ADF_DEDE_Mid1Val_XP1
	{0x21, 0x28},	// 
	{0x22, 0x00},	// ADF_DEDE_Mid2Val_XP1
	{0x23, 0x28},	// 
	{0x24, 0x00},	// ADF_DEDE_EndVal_XP1
	{0x25, 0x20},	//

/*==================================*/
/* ADF CKL      	                  */
/*==================================*/
	{0x26, 0xED},	// ADF_ThrLevel_CKL
	
	// ADF - CKLTh1 
	{0x27, 0x94},	// ADF_ThrLevel_CKLTh1
	{0x28, 0x11},	// ADF_MinVal_CKL_TH1
	{0x29, 0x13},	// ADF_MidVal_CKL_TH1
	{0x2A, 0x13},	// ADF_MaxVal_CKL_TH1
	
	// ADF - CKLTh2 
	{0x2B, 0x06},	// ADF_Min_CKL_TH2
	{0x2C, 0x08},	// ADF_Max_CKL_TH2
	
	// ADF - CNFTh3, 4 
	{0x2F, 0x04},	// ADF_CKL_TH3_at_Dark
	{0x32, 0x00},	// ADF_CKL_TH4_at_Dark
	
	{0x30, 0x02},	// ADF_CKL_TH3_at_Normal
	{0x33, 0x14},	// ADF_CKL_TH4_at_Normal
	
	{0x31, 0x00},	// ADF_CKL_TH3_at_Bright
	{0x34, 0x00},	// ADF_CKL_TH4_at_Bright
	
	{0x2D, 0x08},	// ADF_Min_CKL_TH5
	{0x2E, 0x0B},	// ADF_Max_CKL_TH5

/*==================================*/
/* ADF CLB      	                  */
/*==================================*/
	{0x38, 0x54},	// ADF_ThrLevel_CLB

	{0x39, 0x00},	// ADF_Min_CLBTh_TH1
	{0x3A, 0x40},	// ADF_Min_CLB_Cb
	{0x3B, 0x40},	// ADF_Min_CLB_Cr

	{0x3C, 0x10},	// ADF_Max_CLBTh_TH1
	{0x3D, 0x50},	// ADF_Max_CLB_Cb
	{0x3E, 0x50},	// ADF_Max_CLB_Cr

	{0xFF, 0xE1},	// Page
	{0x4D, 0x0C},	// CLB_Sec

/*==================================*/
/* Suppression 		                  */
/*==================================*/
	{0xFF, 0x96},	// Page
	{0x35, 0x42},	// ADF_ThrLevel_SUP
	{0x36, 0x70},	// Min_suppression
	{0x37, 0x80},	// Max_suppression

/*==================================*/
/* CDC        			                */
/*==================================*/
	{0xFF, 0x95},	// Page
	{0xE2, 0x03},	// Th_CDC
	{0xFF, 0xE0},	// Page
	{0x74, 0x00},	// YOff0_DDC

/*==================================*/
/* Saturation			                  */
/*==================================*/
	{0xFF, 0x96},	// Page
	{0xA3, 0x40},	// Color Saturation

	{0xA5, 0x00},	// u8ADF_BaseBGTAWBZone1
	{0xA8, 0x00},	// u8ADF_BaseBGTAWBZone2
	{0xA6, 0x00},	// BGTLux1
	{0xA9, 0x00},	// BGTLux2
	{0xA7, 0x00},	// Value1
	{0xAA, 0x00},	// Value2

	{0xAC, 0x02},	// SATZone
	{0xAD, 0x06},	// SATLux1
	{0xAE, 0x00},	// SATValue

	{0xFF, 0x95},	// ADF_refresh 
	{0xBD, 0x01},	//

/*===================================*/
/* Profile Register	                 */
/*===================================*/
	{0xFF, 0x98},	// Page
	{0x45, 0x00},	// SensorCtrl_Addr
	{0x46, 0x0D},	//SensorMode_Addr
	{0x47, 0x00},	// SensorTestMode_Addr
	{0x48, 0x00},	// XSubSmplEn_Addr
	{0x49, 0x00},	// XSubSmplEn_Addr
	{0x4A, 0x01},	// PLL_P
	{0x4B, 0x15},	// PLL_M
	{0x4C, 0x00},	// PLL_S
	{0x4D, 0x00},	// PLL_Ctrl
	{0x4E, 0x01},	// scr_clk_sel
	{0x4F, 0x00},	// output_pad_status
	{0x50, 0x1F},	// ablk_ctrl_10
	{0x51, 0xFF},	// BayerFunc
	{0x52, 0xFF},	// RGBFunc
	{0x53, 0x02},	// SCLCtrl
	{0x54, 0x01},	// SCLHorScale
#if defined(INIT_RES_800_600)
	{0x55, 0xFF},	//
	{0x56, 0x01},	// SCLVerScale
	{0x57, 0xFF},	//
#else
	{0x55, 0x99},	//
	{0x56, 0x01},	// SCLVerScale
	{0x57, 0x99},	//
#endif
	{0x58, 0x00},	// SCLCropStartX
	{0x59, 0x00},	//
	{0x5A, 0x00},	// SCLCropStartY
	{0x5B, 0x00},	//
#if defined(INIT_RES_800_600)
	{0x5C, 0x03},	// SCLCropEndX
	{0x5D, 0x20},	//
	{0x5E, 0x02},	// SCLCropEndY
	{0x5F, 0x58},	//
#else
	{0x5C, 0x02},	// SCLCropEndX
	{0x5D, 0x80},	//
	{0x5E, 0x01},	// SCLCropEndY
	{0x5F, 0xE0},	//
#endif
	{0x60, 0x01},	// OutForm
	{0x61, 0x0D},	// OutCtrl
	{0x62, 0x04},	// AEWinStartX
	{0x63, 0x04},	// AEWinStartY
	{0x64, 0x66},	// MergedWinWidth
	{0x65, 0x5C},	// MergedWinHeight
	{0x66, 0x22},	// AWBTrim_Addr
	{0x67, 0x38},	// AWBCTWinAx_Addr
	{0x68, 0x20},	// AWBCTWinAy_Addr
	{0x69, 0x92},	// AWBCTWinBx_Addr
	{0x6A, 0x73},	// AWBCTWinBy_Addr
	{0x6B, 0x03},	// AFCFrmaeLength
	{0x6C, 0x80},	// 

	{0x1D, 0x00},	// SensorCtrl_Addr
	{0x1E, 0x0D},	// SensorMode_Addr
	{0x1F, 0x00},	// SensorTestMode_Addr
	{0x20, 0x00},	// XSubSmplEn_Addr
	{0x21, 0x00},	// XSubSmplEn_Addr
	{0x22, 0x01},	// PLL_P
	{0x23, 0x15},	// PLL_M
	{0x24, 0x00},	// PLL_S
	{0x25, 0x00},	// PLL_Ctrl
	{0x26, 0x01},	// scr_clk_sel
	{0x27, 0x00},	// output_pad_status
	{0x28, 0x3F},	// ablk_ctrl_10
	{0x29, 0xFF},	// BayerFunc
	{0x2A, 0xFF},	// RGBFunc
	{0x2B, 0x00},	// SCLCtrl
	{0x2C, 0x03},	// SCLHorScale
	{0x2D, 0xFF},	// 
	{0x2E, 0x03},	// SCLVerScale
	{0x2F, 0xFF},	// 
	{0x30, 0x00},	// SCLCropStartX
	{0x31, 0x00},	// 
	{0x32, 0x00},	// SCLCropStartY
	{0x33, 0x00},	// 
	{0x34, 0x05},	// SCLCropEndX
	{0x35, 0x00},	// 
	{0x36, 0x04},	// SCLCropEndY
	{0x37, 0x00},	// 
	{0x38, 0x01},	// OutForm
	{0x39, 0x0D},	// OutCtrl
	{0x3A, 0x04},	// AEWinStartX
	{0x3B, 0x04},	// AEWinStartY
	{0x3C, 0x66},	// MergedWinWidth
	{0x3D, 0x5C},	// MergedWinHeight
	{0x3E, 0x22},	// AWBTrim_Addr
	{0x3F, 0x38},	// AWBCTWinAx_Addr
	{0x40, 0x20},	// AWBCTWinAy_Addr
	{0x41, 0x92},	// AWBCTWinBx_Addr
	{0x42, 0x73},	// AWBCTWinBy_Addr
	{0x43, 0x05},	// AFCFrmaeLength
	{0x44, 0x9D},	// 

	{0xFF, 0x93},
	{0x05, 0x00},	// LastRecvCmd
	{0xFF, 0xE6},
	{0x10, 0x11},	// Preview Command

	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream stop

};


/*==============================================*/
/* CAMERA_Init - VT Call Initial 셋팅		        */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_VT_Init_Reg[] = {
/*==================================*/
/* OutFormatter                     */
/*==================================*/
	{0xFF, 0xE1},	// Page
	{0x70, 0x01},	// Outformat
	{0x71, 0x0D},	//

	{0xFF, 0xE0},	// Page
	{0x02, 0x80},	// ISP Mode

/*===================================*/
/* MIPI Setting                      */
/*===================================*/
	{0xFF, 0xE4},	// Page
	{0x10, 0x1E},	// MIPI DATA TYPE Addr
	{0x04, 0x01},	// CSI_EN
	{0xFF, 0x96},	// Page
	{0xD5, 0x1E},	// gPT_u8PR_Active_SXGA_DATA_TYPE_Addr
	{0xD6, 0x0C},	// gPT_u8PR_Active_SXGA_WORD_COUNT_Addr0
	{0xD7, 0x80},	// gPT_u8PR_Active_SXGA_WORD_COUNT_Addr1

	{0xFF, 0x97},	// Page
	{0x13, 0x1E},	// gPT_u8PR_Active_VGA_DATA_TYPE_Addr
	{0x14, 0x01},	// gPT_u8PR_Active_VGA_WORD_COUNT_Addr0
	{0x15, 0x60},	// gPT_u8PR_Active_VGA_WORD_COUNT_Addr1

	//===================================
	// For Analog Setting
	//===================================
	//Bayer Setting
	{0xFF, 0xE8},	// Page
	{0x0F, 0x01},	// cpga_bias0
	{0x10, 0xCE},	// cpga_bias1
	{0xFF, 0x96},	// Page
	{0xB0, 0x01},	// min cpga_bias0
	{0xB1, 0x08},	// min cpga_bias1
	{0xBD, 0x01},	// mid cpga_bias0
	{0xBE, 0xCE},	// mid cpga_bias1
	{0xC8, 0x01},	// max cpga_bias0
	{0xC9, 0xCE},	// max cpga_bias1

	{0xFF, 0xE8},	// Page
	{0x11, 0x28},	// clamp_on_off_con

	{0x12, 0x80},	// clamp_con
	{0xFF, 0x96},	// Page
	{0xB8, 0x80},	// min_clamp_con
	{0xD0, 0x80},	// max_clamp_con

	{0xFF, 0xE8},	// Page
	{0x13, 0x8C},	// adc_con
	{0xFF, 0x96},	// Page
	{0xB3, 0x8C},	// min_adc_con
	{0xC0, 0x8C},	// mid_adc_con
	{0xCB, 0x8C},	// mid_adc_con

	{0xFF, 0xE8},	// Page
	{0x14, 0xC7},	// cpga_con

	{0x15, 0xEC},	// ramp_ppg_con

	{0x16, 0x87},	// cds_amp1_2_bias //cfpn
	{0xFF, 0x96},	// Page
	{0xB5, 0x87},	// min_cds_amp1_2_bias
	{0xC2, 0x87},	// mid_cds_amp1_2_bias
	{0xCD, 0x87},	// max_cds_amp1_2_bias

	{0xFF, 0xE8},	// Page
	{0x17, 0x04},	// cds_amp3_pixel_bias

	{0x18, 0x10},	// rampgen_con_0
	{0xFF, 0x96},	// Page
	{0xB6, 0x10},	// max_rampgen_con_0
	{0xC3, 0x10},	// mix_rampgen_con_0
	{0xCE, 0x10},	// min_rampgen_con_0

	{0xFF, 0xE8},	// Page
	{0x19, 0x03},	// rampgen_con1
	{0xFF, 0x96},	// Page
	{0xB7, 0x03},	// min_rampgen_con1
	{0xC4, 0x03},	// min_rampgen_con1
	{0xCF, 0x03},	// min_rampgen_con1

	{0xFF, 0xE8},	// Page
	{0x1A, 0x1C},	// rampgen_con_2

	{0x1B, 0x77},	// ppg_con_0
	{0x1C, 0x07},	// ppg_con_1
	{0x1D, 0x1C},	// ppg_con_2

	{0x1E, 0x05},	// npg_con //npg_clk_divideren<==BLC
	{0xFF, 0x96},	// Page
	{0xB4, 0x05},	// min_npg_con
	{0xC1, 0x05},	// mid_npg_con
	{0xCC, 0x05},	// max_npg_con

	{0xFF, 0xE8},	// Page
	{0x1F, 0x58},	// ldo_cpga_con_cpga_buffer_bypass[5]
	{0xFF, 0x96},	// Page
	{0xB2, 0x58},	// ldo_cpga_con_min
	{0xBF, 0x58},	// ldo_cpga_con_mid
	{0xCA, 0x58},	// ldo_cpga_con_max

	{0xFF, 0xE8},	// Page
	{0x20, 0x01},	// cpga ref_os(max)

	// Pixel
	{0x21, 0x00},	// riseScanSx_H
	{0x22, 0x04},	// riseScanSx_L
	{0x23, 0x01},	// fallScanSx_H
	{0x24, 0x55},	// fallScanSx_L
	{0x25, 0x01},	// riseScanSx1_H
	{0x26, 0xC0},	// riseScanSx1_L
	{0x27, 0x00},	// fallScanSx1_H
	{0x28, 0x00},	// fallScanSx1_L

	{0x29, 0x00},	// riseScanSx_cds_H
	{0x2A, 0x04},	// riseScanSx_cds_L
	{0x2B, 0x01},	// fallScanSx_cds_H
	{0x2C, 0x55},	// fallScanSx_cds_L
	{0x2D, 0x01},	// riseScanSx_cds1_H
	{0x2E, 0x80},	// riseScanSx_cds1_L
	{0x2F, 0x00},	// fallScanSx_cds1_H
	{0x30, 0x00},	// fallScanSx_cds1_L

	{0x31, 0x00},	// RiseScanRx_H
	{0x32, 0x01},	// RiseScanRx_H
	{0x33, 0x00},	// FallScanRx_H
	{0x34, 0x08},	// FallScanRx_L

	{0x35, 0x01},	// riseScantx_H
	{0x36, 0x5F},	// riseScantx_L
	{0x37, 0x01},	// fallScantx_H
	{0x38, 0xC0},	// fallScantx_L

	{0x39, 0x01},	// RiseIntTx
	{0x3A, 0x3F},	// FallIntTx
	{0xFF, 0x96},	// Page
	{0xAF, 0x33},	// FallIntTx_Th
	{0xBC, 0x3F},	// min_FallIntTx
	{0xD4, 0x3F},	// max_FallIntTx

	{0xFF, 0xE8},	// Page
	{0x3B, 0x01},	// RiseIntRx
	{0x3C, 0x3F},	// FallIntRx

	{0xFF, 0x98},	// Page
	{0xEF, 0x3F},	// FallIntLatch (UR)

	// CDS
	{0xFF, 0xE8},	// Page
	{0x3D, 0x00},	// RiseQrst_H
	{0x3E, 0x20},	// RiseQrst_L
	{0x3F, 0x03},	// FallQrst_H
	{0x40, 0x8F},	// FallQrst_L
	{0xFF, 0x96},	// Page
	{0xBA, 0x8F},	// min_fallQrst
	{0xC6, 0x8F},	// mid_fallQrst
	{0xD2, 0x8F},	// max_fallQrst

	{0xFF, 0xE8},	// Page
	{0x41, 0x00},	// RiseQsig_H
	{0x42, 0x20},	// RiseQsig_L
	{0x43, 0x01},	// FallQsig_H
	{0x44, 0x48},	// FallQsig_L
	{0xFF, 0x96},	// Page
	{0xB9, 0x48},	// min_fallQsig
	{0xC5, 0x48},	// mid_fallQsig
	{0xD1, 0x48},	// max_fallQsig

	{0xFF, 0xE8},	// Page
	{0x45, 0x00},	// riseQos1_H
	{0x46, 0x20},	// riseQos1_L
	{0x47, 0x00},	// fallQos1_H
	{0x48, 0xA0},	// fallQos1_L
	{0x49, 0x00},	// riseQos2_H
	{0x4A, 0x20},	// riseQos2_L
	{0x4B, 0x00},	// fallQos2_H
	{0x4C, 0xB0},	// fallQos2_L

	// CPGA
	{0x4D, 0x00},	// RiseCreset
	{0x4E, 0x1A},	//
	{0x4F, 0x01},	// FallCreset_H
	{0x50, 0x30},	// FallCreset_L

	{0x51, 0x03},	// Rise_cpga_pdn_H
	{0x52, 0xFF},	// Rise_cpga_pdn_L
	{0x53, 0x00},	// Fall_cpga_pdn_H
	{0x54, 0x1C},	// Fall_cpga_pdn_L

	{0x55, 0x07},	// Rise_MillerEn_H
	{0x56, 0xB0},	// Rise_MillerEn_L
	{0x57, 0x01},	// Fall_MillerEn_H
	{0x58, 0x00},	// Fall_MillerEn_L

	// Qt_rst, Qt_sig
	{0x59, 0x00},	// Rise_QTRST_H
	{0x5A, 0x01},	// Rise_QTRST_L
	{0x5B, 0x01},	// Fall_QTRST_H
	{0x5C, 0x50},	// Fall_QTRST_L

	{0x5D, 0x01},	// Rise_QTRST_H
	{0x5E, 0x50},	// Rise_QTRST_L
	{0x5F, 0x03},	// Fall_QTRST_H
	{0x60, 0x92},	// Fall_QTRST_L

	//IClamp
	{0x61, 0x00},	// FallIclamp_H
	{0x62, 0x04},	// FallIclamp_L
	{0x63, 0x00},	// RiseIclamp_H
	{0x64, 0x00},	// RiseIclamp_L

	// RAMP
	{0x65, 0x03},	// riseqramp_H
	{0x66, 0x92},	// riseqramp_L
	{0x67, 0x07},	// fallqramp_H
	{0x68, 0xB2},	// fallqramp_L
	{0xFF, 0x96},	// Page
	{0xBB, 0xB2},	// minfallqramp
	{0xC7, 0xB2},	// midfallqramp
	{0xD3, 0xB2},	// maxfallqramp

	// qbitline
	{0xFF, 0xE8},	// Page
	{0x69, 0x00},	// RiseQbitlinepdn_H
	{0x6A, 0x00},	// RiseQbitlinepdn_L
	{0x6B, 0x00},	// FallQbitlinepdn_H
	{0x6C, 0x00},	// FallQbitlinepdn_L

	{0x6D, 0x00},	// RiseRamp_prst_H
	{0x6E, 0x00},	// RiseRamp_prst_L
	{0x6F, 0x03},	// FallRamp_prst_H
	{0x70, 0xB0},	// FallRamp_prst_L
	{0x71, 0x00},	// RiseRamp_prst1_H
	{0x72, 0x00},	// RiseRamp_prst1_L
	{0x73, 0x00},	// FallRamp_prst1_H
	{0x74, 0x00},	// FallRamp_prst1_L

	// Line buffer
	{0x75, 0x03},	// riselatch_prst_H
	{0x76, 0x92},	// riselatch_prst_L
	{0x77, 0x03},	// Falllatch_prst_H
	{0x78, 0xB0},	// Falllatch_prst_L

	{0x79, 0x00},	// RiseTranE_H
	{0x7A, 0x50},	// RiseTranE_L
	{0x7B, 0x00},	// FallTranE_H
	{0x7C, 0x52},	// FallTranE_L
	{0x7D, 0x00},	// RiseTranO_H
	{0x7E, 0x52},	// RiseTranO_L
	{0x7F, 0x00},	// FallTranO_H
	{0x80, 0x54},	// FallTranO_L

	// Scanlath
	{0x85, 0x00},	// Rise scanlatch
	{0x86, 0x00},	// Rise scanlatch
	{0x87, 0x03},	// FallScanLatch_H
	{0x88, 0x8F},	// FallScanLatch_L

	{0x8A, 0x3F},	// FallIntLatch

	{0x96, 0x04},	// rise cpga_ref_sample
	{0x97, 0x00},	// rise cpga_ref_sample
	{0x98, 0x07},	// fall cpga_ref_sample
	{0x99, 0xB0},	// fall cpga_ref_sample

	// LineStart
	{0x91, 0x01},	// LineStart_H
	{0x92, 0x5E},	// LineStart_L(rising 350 clk)

	{0x93, 0x07},	// linemode(tran timing control)

	// MIPI
	{0xFF, 0xE4},	// Page
	{0x58, 0xC3},	// PHY_LP_TX_PARA

	//==================================
	// ADF Anlog
	//==================================
	{0xFF, 0x95},	// Page
	{0xB8, 0x66},	// APThreshold

	{0xFF, 0x97},	// Page
	{0x58, 0xC5},	// AddedAnalogADFCtrl
	{0x59, 0x15},	// AddedDigitalADFCtrl
	{0x5C, 0xE8},	// u8An_Addr_H Manual Analog SNR Address

	{0x5D, 0x2E},	// u8AnEn0_Addr_1__FallSx_CDS1_L
	{0x5E, 0x60},	// u8AnEn0_Min_Value
	{0x5F, 0x60},	// u8AnEn0_Mid_Value
	{0x60, 0x80},	// u8AnEn0_Max_Value
	{0x61, 0x80},	// u8UpdateValue
	
	{0x62, 0x14},	// u8AnEn0_Addr_1_CPGA_Buffer_Bias
	{0x63, 0xC4},	// u8AnEn0_Min_Value
	{0x64, 0xC4},	// u8AnEn0_Mid_Value
	{0x65, 0xC7},	// u8AnEn0_Max_Value
	{0x66, 0xC7},	// u8UpdateValue
	
	{0x6C, 0x94},	// u8DiEn0_Addr_0_StdB
	{0x6D, 0xCD},	// u8DiEn0_Addr_1
	{0x6E, 0xAA},	// u8DiEn0_Threshold
	{0x6F, 0xFF},	// u8DiEn0_Min_Value
	{0x70, 0x00},	// u8DiEn0_Max_Value
	{0x71, 0x00},	// u8UpdateValue
	
	{0x72, 0x96},	// u8DiEn1_Addr_0_UnicolorZone
	{0x73, 0xE4},	// u8DiEn1_Addr_1
	{0x74, 0xAA},	// u8DiEn1_Threshold
	{0x75, 0x05},	// u8DiEn1_Min_Value
	{0x76, 0x01},	// u8DiEn1_Max_Value
	{0x77, 0x01},	// u8UpdateValue
	
	{0x78, 0xE8},	// u8DiEn2_Addr_0_Pixel_Bias
	{0x79, 0x17},	// u8DiEn2_Addr_1
	{0x7A, 0x33},	// u8DiEn2_Threshold
	{0x7B, 0x00},	// u8DiEn2_Min_Value
	{0x7C, 0x04},	// u8DiEn2_Max_Value
	{0x7D, 0x04},	// u8UpdateValue

	//==================================
	// Line Length & Flip
	//==================================
	//LineLength
	{0xFF, 0xE8},	// Page
	{0x0A, 0x07},	//
	{0x0B, 0xB4},	//

	{0xFF, 0x98},	// Page
	{0xDF, 0x00},	// Flip

	//==================================
	// AE Gain Table
	//==================================
	//Table1	X1.8
	{0xFF, 0x93},	// Page
	{0xD8, 0x20},	//
	{0xD9, 0xA8},	//
	{0xDA, 0x05},	//

	//Table2	X2
	{0xDB, 0x0E},	//
	{0xDC, 0xA8},	//
	{0xDD, 0x15},	//

	//Table3	X3
	{0xDE, 0x0E},	//
	{0xDF, 0xA8},	//
	{0xE0, 0x05},	//

	//Table4	X4
	{0xE1, 0x0F},	//
	{0xE2, 0xE8},	//
	{0xE3, 0x05},	//

	//Table5	X5
	{0xE4, 0x0A},	//
	{0xE5, 0xA8},	//
	{0xE6, 0x01},	//

	//Table6	X6
	{0xE7, 0x0E},	//
	{0xE8, 0xA8},	//
	{0xE9, 0x01},	//

	//Table7	X7
	{0xEA, 0x0F},	//
	{0xEB, 0xA8},	//
	{0xEC, 0x01},	//

	//Table8	X8
	{0xED, 0x0F},	//
	{0xEE, 0xE8},	//
	{0xEF, 0x01},	//

	//Table9	X9
	{0xF0, 0x0F},	//
	{0xF1, 0xF8},	//
	{0xF2, 0x01},	//

/*==================================*/
/* PT : AGAIN Control               */
/*==================================*/
	{0xFF, 0x97},	// Page
	{0x82, 0x1E},	// UsrAGain_0
	{0x83, 0x1E},	// UsrAGain_1
	{0x84, 0x2D},	// UsrAGain_2
	{0x85, 0x38},	// UsrAGain_3
	{0x86, 0x48},	// UsrAGain_4
	{0x87, 0x58},	// UsrAGain_5
	{0x88, 0x68},	// UsrAGain_6
	{0x89, 0x78},	// UsrAGain_7
	{0x8A, 0x88},	// UsrAGain_8

/*==================================*/						
/* PT : AGAIN Control               */		
/*==================================*/	
	{0x98, 0x1C},	// AE_UsrDeminoAGain_0
	{0x99, 0x1D},	// AE_UsrDeminoAGain_1
	{0x9A, 0x2D},	// AE_UsrDeminoAGain_2
	{0x9B, 0x38},	// AE_UsrDeminoAGain_3
	{0x9C, 0x48},	// AE_UsrDeminoAGain_4
	{0x9D, 0x58},	// AE_UsrDeminoAGain_5
	{0x9E, 0x68},	// AE_UsrDeminoAGain_6
	{0x9F, 0x78},	// AE_UsrDeminoAGain_7
	{0xA0, 0x88},	// AE_UsrDeminoAGain_8

/*==================================*/
/* ISP Global Control #1            */
/*==================================*/   
	{0xFF, 0xE1},	// Page
	{0x20, 0x00},	// EDE: Optiong
	{0x21, 0x22},	// EDE: SlopeGain
	{0x22, 0x44},	// EDE: EDELuAdpCtl
	{0x23, 0x00},	// EDE: PreCoringPt
	{0x24, 0x00},	// EDE: x1 point
	{0x25, 0x16},	// EDE: x1 point
	{0x26, 0x00},	// EDE: x2 point
	{0x27, 0x98},	// EDE: x2 point
	{0x28, 0x09},	// EDE: TransFuncSl1
	{0x29, 0x22},	// EDE: TransFuncSl2
	{0x2A, 0x00},	// EDE: Adaptation left margin
	{0x2B, 0x4C},	// EDE: Adaptation right margin
	{0x2C, 0x08},	// EDE: RGB edge threshol
	{0x2D, 0x00},	// EDE: SmallOffset

	{0x30, 0x48},	// EDESaThrd1
	{0x31, 0x60},	// EDESaThrd2
	{0x32, 0x00},	// EDESaSlope

	{0xFF, 0xE0},	// Page
	{0xD0, 0x01},	// BCD
	{0xD1, 0x00},	// BCDFcsThrd
	{0x61, 0x17},	// CDC Slash pattern Off

	{0xFF, 0xE1},	// Page
	{0xE0, 0x00},	// RDC Enable
	{0xE1, 0x00},	// RDC_R0
	{0xE2, 0x22},	// RDC_R1
	{0xE3, 0x40},	// RDC_R2
	{0xEA, 0x00},	// RDC_B0
	{0xEB, 0x22},	// RDC_B1
	{0xEC, 0x40},	// RDC_B2

/*==================================*/						
/* LNF                        	    */
/*==================================*/
	{0xFF, 0xE0},	// Page
	{0x80, 0x66},	// LNFClrSmRLeft
	{0x81, 0x81},	// LNFClrSmRRight
	{0x82, 0x8A},	// LNFClrSmRBottom
	{0x83, 0xA2},	// LNFClrSmRTop
	{0x84, 0x0E},	// LNFClrSmTh

	{0x85, 0x01},	// LNFGzRgTh
	{0x86, 0x82},	// LNFGzSmTh

	{0x87, 0x08},	// LNFLLimit
	{0x88, 0x3C},	// LNFHLimit
	{0x89, 0x00},	// LNFThAdd
	{0x8A, 0x0A},	// LNFTh0
	{0x8B, 0x06},	// LNFTh1
	{0x8C, 0x00},	// LNFTh2
	{0x8D, 0x00},	// LNFTh3
	{0x8E, 0x00},	// LNFTh4
	{0x8F, 0x00},	// LNFTh5

/*==================================*/						
/* ADF LNF      	                  */
/*==================================*/
	{0xFF, 0x97},	// Page
	{0x8B, 0x42},	//ADF_Threshold_LNF

	{0x8C, 0x18},	//ADF_Min_LNFLLimit
	{0x8E, 0x08},	//ADF_Min_LNFTh0
	{0x90, 0x06},	//ADF_Min_LNFTh1
	{0x92, 0x08},	//ADF_Min_LNFClrSmTh

	{0x8D, 0x18},	//ADF_Max_LNFLLimit
	{0x8F, 0x03},	//ADF_Max_LNFTh0
	{0x91, 0x01},	//ADF_Max_LNFTh1
	{0x93, 0x00},	// ADF_Max_LNFClrSmTh

/*==================================*/
/* NCNF                       	    */
/*==================================*/
	{0xFF, 0xE1},	// Page
	{0x40, 0x07},	// YunFuncEn
	{0x41, 0xF0},	// CNFCtrl_A
	{0x42, 0x18},	// CNFCtrl_B
	{0x43, 0x75},	// CNFCtrl_C
	{0x44, 0x00},	// CNF_AdpCtrl

	//==================================
	// AE
	//==================================
	{0xFF, 0x93},	// Page
	{0x07, 0x02},	// Fixed Frame
	{0x0B, 0x11},	// Weight_0
	{0x0C, 0x11},	// Weight_1
	{0x0D, 0x11},	// Weight_2
	{0x0E, 0xC8},	// Weight_3
	{0x0F, 0x18},	// Weight_4
	{0x10, 0xC1},	// Weight_5
	{0x11, 0xCF},	// Weight_6
	{0x12, 0x11},	// Weight_7
	{0x13, 0xC8},	// Weight_8
	{0x14, 0x18},	// Weight_9
	{0x15, 0x11},	// Weight_10
	{0x16, 0x11},	// Weight_11
	{0x17, 0x01},	// Weight_12

	{0x18, 0x05},	// AE Speed
	{0x19, 0x03},	// u8AeLockBnd
	{0x1A, 0x06},	// u8AeHoldBnd

	{0x1B, 0x08},	// Analog gain Max

	{0x1C, 0x00}, // 50Hz Time Step
	{0x1D, 0x05},
	{0x1E, 0x74},
	{0x1F, 0x7C},

	{0x22, 0x3B},	// Outdoor Target
	{0x23, 0x3B},	// indoor Target

	{0x46, 0x08},	// LuxGainTB_0
	{0x47, 0x10},	// LuxGainTB_1
	{0x48, 0x38},	// LuxGainTB_2
	{0x49, 0x88},	// LuxGainTB_3

	{0x4A, 0x00},	// LuxTimeTB_0
	{0x4B, 0x80},	// LuxTimeTB_0
	{0x4C, 0x00},	// LuxTimeTB_1
	{0x4D, 0xD0},	// LuxTimeTB_1
	{0x4E, 0x02},	// LuxTimeTB_2
	{0x4F, 0x00},	// LuxTimeTB_2
	{0x50, 0x04},	// LuxTimeTB_3
	{0x51, 0x80},	// LuxTimeTB_3

	{0x72, 0x0D},	// 71.5Mhz SCLK
	{0x73, 0xF7},	// 

	{0x79, 0xB8},	// Gain Max
	{0x7A, 0x48},	// Gain 3lut
	{0x7B, 0x38},	// Gain 2lut
	{0x7C, 0x28},	// Gain 1lut
	{0x7D, 0x1D},	// Gain Min

	{0x7E, 0x05},	// MinFrame 15fps
	{0x7F, 0xDD},	//

	{0x82, 0x0F},	// Time4lut 60hz
	{0x83, 0x0A},	// Time3lut 60hz
	{0x84, 0x08},	// Time2lut 60hz
	{0x85, 0x08},	// Time1lut 60hz

	{0x86, 0x0C},	// TimeMax50Hz	:
	{0x87, 0x08},	// Time3Lux50Hz	: 8.5fps
	{0x88, 0x06},	// Time2Lut50Hz	: 10fps
	{0x89, 0x06},	// Time1Lut50Hz	: 15fps

	{0x8A, 0x05},	// 60Hz Frame Rate
	{0x8B, 0x04},	//

	{0x8C, 0x04},	// 50Hz Frame Rate
	{0x8D, 0xF4},	//

	{0x8E, 0x19},	// LuxLevel_Y3
	{0x8F, 0x08},	// LuxLevel_Y2
	{0x90, 0x01},	// LuxLevel_Y1
	{0x91, 0x00},	// LuxLevel_Yx

	{0x9A, 0x03},	// TimeNum0
	{0xB9, 0x05},	// FrameOffset
	{0xBE, 0x00},	// UserGTh

	{0x98, 0x2D},
	{0x99, 0x1D},

	{0xC5, 0x00},	// UpperFine-H
	{0xC6, 0x00},	// UpperFine-L
	{0xC7, 0x00},	// LowerFine-H
	{0xC8, 0x01},	// LowerFine-L
	{0xC9, 0x05},	// DarkOffset
	{0xCA, 0x05},	// DarkTh
	{0xCB, 0x05},	// MinEXP 10=1/1100sec
	{0xCC, 0x06},	// MinEXPth DNP4300Lux=20
	{0xCD, 0x00},	// AE speed

	{0xFF, 0x97},	// MinimumExTh
	{0x37, 0x06},	//

  {0xFF, 0x93},
	{0x2A, 0x05},	// Fast AE
	{0x2B, 0x00},	// Dgain
	{0x2C, 0x00},	// CurTime
	{0x2D, 0x0A},
	{0x2E, 0xE8},
	{0x2F, 0xF8},

	{0xB1, 0x04},	// FineTime
	{0xB2, 0x70},
	{0xB3, 0x01},	// CoarseTime
	{0xB4, 0x6A},

	{0x08, 0x3D},	// AE Renew - 50Hz

/*==================================*/
/* AWB STE                          */
/*==================================*/
	{0xFF, 0xE1},	// Page
	{0x9A, 0x01},	// AWBCtrl
	{0x9C, 0x08},	// AWBLuThL
	{0x9D, 0xC0},	// AWBLuThH
	{0xA0, 0x00},	// AWBZone0LTx - Flash
	{0xA1, 0x00},	// AWBZone0LTy
	{0xA2, 0x00},	// AWBZone0RBx
	{0xA3, 0x00},	// AWBZone0RBy
	{0xA4, 0x90},	// AWBZone1LTx - Cloudy
	{0xA5, 0x6B},	// AWBZone1LTy
	{0xA6, 0xA7},	// AWBZone1RBx
	{0xA7, 0x4B},	// AWBZone1RBy
	{0xA8, 0x71},	// AWBZone2LTx - D65
	{0xA9, 0x63},	// AWBZone2LTy
	{0xAA, 0x8F},	// AWBZone2RBx
	{0xAB, 0x49},	// AWBZone2RBy
	{0xAC, 0x6C},	// AWBZone3LTx - Fluorecent
	{0xAD, 0x76},	// AWBZone3LTy
	{0xAE, 0x8F},	// AWBZone3RBx
	{0xAF, 0x50},	// AWBZone3RBy
	{0xB0, 0x4B},	// AWBZone4LTx - CWF
	{0xB1, 0x78},	// AWBZone4LTy
	{0xB2, 0x6B},	// AWBZone4RBx
	{0xB3, 0x50},	// AWBZone4RBy
	{0xB4, 0x50},	// AWBZone5LTx - TL84
	{0xB5, 0x88},	// AWBZone5LTy
	{0xB6, 0x6F},	// AWBZone5RBx
	{0xB7, 0x71},	// AWBZone5RBy
	{0xB8, 0x4A},	// AWBZone6LTx - A
	{0xB9, 0x99},	// AWBZone6LTy
	{0xBA, 0x64},	// AWBZone6RBx
	{0xBB, 0x83},	// AWBZone6RBy
	{0xBC, 0x41},	// AWBZone7LTx - Horizon
	{0xBD, 0xB4},	// AWBZone7LTy
	{0xBE, 0x5A},	// AWBZone7RBx
	{0xBF, 0x96},	// AWBZone7RBy
	{0xC0, 0x00},	// AWBZone8LTx - Skin
	{0xC1, 0x00},	// AWBZone8LTy
	{0xC2, 0x00},	// AWBZone8RBx
	{0xC3, 0x00},	// AWBZone8RBy

	{0xFF, 0x94},	// Page
	{0x0D, 0x05},	// FinalRGain
	{0x0E, 0x00},	// 
	{0x11, 0x04},	// FinalBGain
	{0x12, 0xB0},

	{0xFF, 0x95},	// Page
	{0x00, 0x05},	// StdRGain
	{0x01, 0x00},
	{0xFF, 0x94},	// Page
	{0xCC, 0x04},	// StdBGain
	{0xCD, 0xFF},

/*==================================*/						
/* AWB				                      */
/*==================================*/											
	{0xFF, 0x93},	// Page
	{0xF4, 0x8B},	// AWBCtrl
	{0xF5, 0x01},	//
	{0xFF, 0x94},	// Page
	{0x00, 0x00},	// LockRatio
	{0x03, 0x01},	// MinGrayCnt
	{0x04, 0x80},	// MinGrayCnt
	{0x15, 0xD4},	// SkinWinCntTh
	{0x21, 0x28},	// SkinYTh
	{0x22, 0x00},	// SkinHoldHitCnt
	{0x23, 0x0F},	// SkinHoldHitCnt
	{0x2C, 0x65},	// SkinTop2
	{0x2D, 0x80},	// SkinTop2LS1Ratio
	{0x2E, 0x20},	// SkinTop2LS2Ratio
	{0x33, 0x10},	// SkinTop2LSHys
	{0x34, 0x54},	// SkinLTx
	{0x35, 0xBD},	// SkinLTy
	{0x36, 0x74},	// SkinLBx
	{0x37, 0x9D},	// SkinLBy
	{0x39, 0x4F},	// UniCThrY
	{0x3E, 0x0C},	// UniCGrayCntThr_0
	{0x3F, 0x80},	// UniCGrayCntThr_1
	{0xC9, 0x0C},	// StdLS_rw_CWF
	{0xCE, 0x00},	// AWB_LuxConst1_0
	{0xCF, 0x00},	// AWB_LuxConst1_1
	{0xD0, 0x06},	// AWB_LuxConst1_2
	{0xD1, 0x20},	// AWB_LuxConst1_3
	{0xD2, 0x07},	// AWB_LuxConst2_0
	{0xD3, 0x53},	// AWB_LuxConst2_1
	{0xD4, 0x00},	// AWB_LuxConst2_2
	{0xD5, 0x00},	// AWB_LuxConst2_3
	
	{0xDA, 0x00},	// Threshold_indoor
	{0xDB, 0x30},	// 
	{0xDC, 0x01},	// Threshold_outdoor	
	{0xDD, 0x00},	// 
	
	{0xE6, 0x00},	// AWB_Weight_Genernal_0_Flash
	{0xE7, 0x00},	// AWB_Weight_Genernal_1_Cloudy
	{0xE8, 0x20},	// AWB_Weight_Genernal_2_D65
	{0xE9, 0x00},	// AWB_Weight_Genernal_3_Fluorescent
	{0xEA, 0x20},	// AWB_Weight_Genernal_4_CWF
	{0xEB, 0x1A},	// AWB_Weight_Genernal_5_TL84
	{0xEC, 0x1D},	// AWB_Weight_Genernal_6_A
	{0xED, 0x00},	// AWB_Weight_Genernal_7_Horizon
	{0xEE, 0x00},	// AWB_Weight_Indoor_0_Flash
	{0xEF, 0x00},	// AWB_Weight_Indoor_1_Cloudy
	{0xF0, 0x00},	// AWB_Weight_Indoor_2_D65
	{0xF1, 0x1A},	// AWB_Weight_Indoor_3_Fluorescent
	{0xF2, 0x1A},	// AWB_Weight_Indoor_4_CWF
	{0xF3, 0x1A},	// AWB_Weight_Indoor_5_TL84
	{0xF4, 0x00},	// AWB_Weight_Indoor_6_A
	{0xF5, 0x18},	// AWB_Weight_Indoor_7_Horizon
	{0xF6, 0x00},	// AWB_Weight_Outdoor_0_Flash
	{0xF7, 0x18},	// AWB_Weight_Outdoor_1_Cloudy
	{0xF8, 0x00},	// AWB_Weight_Outdoor_2_D65
	{0xF9, 0x20},	// AWB_Weight_Outdoor_3_Fluorescent
	{0xFA, 0x00},	// AWB_Weight_Outdoor_4_CWF
	{0xFB, 0x00},	// AWB_Weight_Outdoor_5_TL84
	{0xFC, 0x00},	// AWB_Weight_Outdoor_6_A
	{0xFD, 0x00},	// AWB_Weight_Outdoor_7_Horizon
	
	{0xFF, 0x96},	// Page
	{0xE4, 0x05},	// AWB_unicolorzone
	
	{0xFF, 0x94},	// Page
	{0x4A, 0x04},	// Min Rgain
	{0x4B, 0x28},	// 
	{0x4C, 0x06},	// Max Rgain
	{0x4D, 0x80},	// 
	{0x4E, 0x03},	// Min Bgain
	{0x4F, 0xB8},	// 
	{0x50, 0x05},	// Max BGain
	{0x51, 0xE8},	// 
	
	{0x52, 0x07},	// LSValue0
	{0x53, 0x04},	// Min Rgain
	{0x54, 0x10},	// 
	{0x55, 0x06},	// Max Rgain
	{0x56, 0x00},	// 
	{0x57, 0x02},	// Min Bgain
	{0x58, 0x80},	// 
	{0x59, 0x05},	// Max BGain
	{0x5A, 0xF0},	// 
	
	{0x5B, 0x06},	// LSValue1
	{0x5C, 0x04},	// Min Rgain
	{0x5D, 0x48},	// 
	{0x5E, 0x07},	// Max Rgain
	{0x5F, 0x40},	// 
	{0x60, 0x02},	// Min Bgain
	{0x61, 0x80},	// 
	{0x62, 0x05},	// Max Bgain
	{0x63, 0xF8},	// 
	
	{0xFF, 0x94},	// Page
	{0x02, 0x10},	// AWBConvSpeedSpecial
	
/*==================================*/
/* UR                               */
/*==================================*/
	{0xFF, 0xE1},	// Page
	{0x9B, 0x22},	//AWBTrim

/*==================================*/
/* CCM                              */
/*==================================*/
	//D65
	{0xFF, 0x94},	// Page
	{0x7B, 0x00},	// D65_CCM_11
	{0x7C, 0x7F},	// D65_CCM_11
	{0x7D, 0xFF},	// D65_CCM_12
	{0x7E, 0xC2},	// D65_CCM_12
	{0x7F, 0xFF},	// D65_CCM_13
	{0x80, 0xFF},	// D65_CCM_13
	{0x81, 0xFF},	// D65_CCM_21
	{0x82, 0xE9},	// D65_CCM_21
	{0x83, 0x00},	// D65_CCM_22
	{0x84, 0x67},	// D65_CCM_22
	{0x85, 0xFF},	// D65_CCM_23
	{0x86, 0xF0},	// D65_CCM_23
	{0x87, 0xFF},	// D65_CCM_31
	{0x88, 0xFE},	// D65_CCM_31
	{0x89, 0xFF},	// D65_CCM_32
	{0x8A, 0xC0},	// D65_CCM_32
	{0x8B, 0x00},	// D65_CCM_33
	{0x8C, 0x82},	// D65_CCM_33


//CWF lgiht             
	{0x8D, 0x00},	// CWF_CCM_11
	{0x8E, 0x79},	// CWF_CCM_11
	{0x8F, 0xFF},	// CWF_CCM_12
	{0x90, 0xC7},	// CWF_CCM_12
	{0x91, 0xFF},	// CWF_CCM_13
	{0x92, 0xFF},	// CWF_CCM_13
	{0x93, 0xFF},	// CWF_CCM_21
	{0x94, 0xEB},	// CWF_CCM_21
	{0x95, 0x00},	// CWF_CCM_22
	{0x96, 0x63},	// CWF_CCM_22
	{0x97, 0xFF},	// CWF_CCM_23
	{0x98, 0xF1},	// CWF_CCM_23
	{0x99, 0xFF},	// CWF_CCM_31
	{0x9A, 0xFF},	// CWF_CCM_31
	{0x9B, 0xFF},	// CWF_CCM_32
	{0x9C, 0xC6},	// CWF_CCM_32
	{0x9D, 0x00},	// CWF_CCM_33
	{0x9E, 0x7C},	// CWF_CCM_33

	//A light
	{0x9F, 0x00},	// A_CCM_11
	{0xA0, 0x54},	// A_CCM_11
	{0xA1, 0xFF},	// A_CCM_12
	{0xA2, 0xF4},	// A_CCM_12
	{0xA3, 0xFF},	// A_CCM_13
	{0xA4, 0xF8},	// A_CCM_13
	{0xA5, 0xFF},	// A_CCM_21
	{0xA6, 0xFC},	// A_CCM_21
	{0xA7, 0x00},	// A_CCM_22
	{0xA8, 0x5E},	// A_CCM_22
	{0xA9, 0xFF},	// A_CCM_23
	{0xAA, 0xE6},	// A_CCM_23
	{0xAB, 0xFF},	// A_CCM_31
	{0xAC, 0xF1},	// A_CCM_31
	{0xAD, 0xFF},	// A_CCM_32
	{0xAE, 0xD2},	// A_CCM_32
	{0xAF, 0x00},	// A_CCM_33
	{0xB0, 0x7D},	// A_CCM_33

	//Out door CCM
	{0xFF, 0x97},	// Page
	{0x24, 0x01},	// CCM LuxThreshold
	{0x25, 0x00},	// CCM LuxThreshold
	{0xFF, 0x95},	// Page
	{0xB3, 0xFF},	// Outdoor CCM On

	{0xFF, 0x96},	// Page
	{0xEA, 0x00},	// Outdoor_CCM_11
	{0xEB, 0x72},	// Outdoor_CCM_11
	{0xEC, 0xFF},	// Outdoor_CCM_12
	{0xED, 0xE6},	// Outdoor_CCM_12
	{0xEE, 0xFF},	// Outdoor_CCM_13
	{0xEF, 0xE8},	// Outdoor_CCM_13
	{0xF0, 0xFF},	// Outdoor_CCM_21
	{0xF1, 0xE8},	// Outdoor_CCM_21
	{0xF2, 0x00},	// Outdoor_CCM_22
	{0xF3, 0x6C},	// Outdoor_CCM_22
	{0xF4, 0xFF},	// Outdoor_CCM_23
	{0xF5, 0xEC},	// Outdoor_CCM_23
	{0xF6, 0xFF},	// Outdoor_CCM_31
	{0xF7, 0xF9},	// Outdoor_CCM_31
	{0xF8, 0xFF},	// Outdoor_CCM_32
	{0xF9, 0xD8},	// Outdoor_CCM_32
	{0xFA, 0x00},	// Outdoor_CCM_33
	{0xFB, 0x6F},	// Outdoor_CCM_33	

/*==================================*/
/* ADF                              */
/*==================================*/	
	{0xFF, 0x95},	// Page
	{0xB2, 0xFF},	// u8FuncCtrl1
	{0xB3, 0xFF},	// u8FuncCtrl2
	{0xB4, 0xFF},	// u8FuncCtrl3
	{0xB5, 0x90},	// Flag
	{0xB6, 0x04},	// Flag1

	{0xBF, 0xFF},	// RgbYcFunc_Normal
	{0xBE, 0xFB},	// RgbYcFunc_Dark

/*==================================*/						
/* ADF BLC      		                */
/*==================================*/
	{0xC0, 0x04},	// ADF_ThrLevel_BLC
	{0xC2, 0x00},	// ADF_Min_BLC
	{0xC3, 0x00},	// ADF_Max_BLC

/*==================================*/						
/* ADF BGT      		                */
/*==================================*/
	{0xFF, 0x96},	// Page
	{0x3F, 0x42},	// ADF_ThrLevel_BGT
	{0x40, 0x00},	// ADF_Min_BGT
	{0x41, 0x00},	// ADF_Max_BGT

/*==================================*/						
/* ADF CNT      		                */
/*==================================*/
	{0x42, 0x76},	// ADF_ThrLevel_CNT
	{0x43, 0x00},	// ADF_Min_CON
	{0x44, 0x00},	// ADF_Max_CON

/*==================================*/						
/* ADF LSC      	                  */
/*==================================*/
	{0xFF, 0x95},	// Page
	{0xC6, 0x53},	// ADF_ThrLevel_LVLSC
	{0xC7, 0xBA},	// ADF_ThrLevel_LSLSC
	{0xC8, 0xA0},	// ADF_MinVal_LVLSC_VAL
	{0xC9, 0xFF},	// ADF_MaxVal_LVLSC_VAL
	
	//Min Shading
	{0xCA, 0xB0},	// Rgain0
	{0xCB, 0x38},	// Rgain1
	{0xCC, 0x05},	// Rgain2
	{0xCD, 0x02},	// Rgain3
	
	{0xCE, 0x98},	// GGain0
	{0xCF, 0x14},	// GGain1
	{0xD0, 0x00},	// GGain2
	{0xD1, 0x00},	// GGain3
	
	{0xD2, 0xA8},	// Bgain0
	{0xD3, 0x18},	// Bgain1	
	{0xD4, 0x08},	// Bgain2
	{0xD5, 0x04},	// Bgain3
	
	//Max Shading
	{0xD6, 0xA8},	// Rgain0
	{0xD7, 0x30},	// Rgain1
	{0xD8, 0x08},	// Rgain2
	{0xD9, 0x04},	// Rgain3
	
	{0xDA, 0x80},	// Ggain0
	{0xDB, 0x10},	// Ggain1
	{0xDC, 0x00},	// Ggain2
	{0xDD, 0x00},	// Ggain3
	
	{0xDE, 0xB0},	// BGain0
	{0xDF, 0x19},	// BGain1
	{0xE0, 0x10},	// BGain2
	{0xE1, 0x0D},	// BGain3

/*==================================*/
/* Gamma                            */
/*==================================*/
	{0xFF, 0x96},	// Page
	{0x46, 0x01},	// Dark Gamma Threshold
	{0x7A, 0x00},	// Dark_Gamma_0
	{0x7B, 0x02},	// Dark_Gamma_1
	{0x7C, 0x04},	// Dark_Gamma_2
	{0x7D, 0x08},	// Dark_Gamma_3
	{0x7E, 0x0C},	// Dark_Gamma_4
	{0x7F, 0x10},	// Dark_Gamma_5
	{0x80, 0x18},	// Dark_Gamma_6
	{0x81, 0x20},	// Dark_Gamma_7
	{0x82, 0x28},	// Dark_Gamma_8
	{0x83, 0x30},	// Dark_Gamma_9
	{0x84, 0x40},	// Dark_Gamma_10
	{0x85, 0x60},	// Dark_Gamma_11
	{0x86, 0x80},	// Dark_Gamma_12
	{0x87, 0xA0},	// Dark_Gamma_13
	{0x88, 0xC0},	// Dark_Gamma_14
	{0x89, 0xE0},	// Dark_Gamma_15
	{0x8A, 0xFF},	// Dark_Gamma_16
	
	{0x45, 0x61},	// Gamma Threshold
	{0x47, 0x00},	// Min_Gamma_0
	{0x48, 0x05},	// Min_Gamma_1
	{0x49, 0x0A},	// Min_Gamma_2
	{0x4A, 0x16},	// Min_Gamma_3
	{0x4B, 0x23},	// Min_Gamma_4
	{0x4C, 0x2E},	// Min_Gamma_5
	{0x4D, 0x42},	// Min_Gamma_6
	{0x4E, 0x56},	// Min_Gamma_7
	{0x4F, 0x67},	// Min_Gamma_8
	{0x50, 0x72},	// Min_Gamma_9
	{0x51, 0x88},	// Min_Gamma_10
	{0x52, 0xAC},	// Min_Gamma_11
	{0x53, 0xC3},	// Min_Gamma_12
	{0x54, 0xD5},	// Min_Gamma_13
	{0x55, 0xE3},	// Min_Gamma_14
	{0x56, 0xF0},	// Min_Gamma_15
	{0x57, 0xFF},	// Min_Gamma_16
	
	{0x58, 0x00},	// Max_Gamma_0
	{0x59, 0x01},	// Max_Gamma_1
	{0x5A, 0x05},	// Max_Gamma_2
	{0x5B, 0x15},	// Max_Gamma_3
	{0x5C, 0x22},	// Max_Gamma_4
	{0x5D, 0x2C},	// Max_Gamma_5
	{0x5E, 0x40},	// Max_Gamma_6
	{0x5F, 0x51},	// Max_Gamma_7
	{0x60, 0x60},	// Max_Gamma_8
	{0x61, 0x6B},	// Max_Gamma_9
	{0x62, 0x81},	// Max_Gamma_10
	{0x63, 0xA2},	// Max_Gamma_11
	{0x64, 0xBC},	// Max_Gamma_12
	{0x65, 0xD1},	// Max_Gamma_13
	{0x66, 0xE3},	// Max_Gamma_14
	{0x67, 0xF1},	// Max_Gamma_15
	{0x68, 0xFF},	// Max_Gamma_16
	
	//Outdoor        
	{0x69, 0x00},	// gAdf_u8OutGMAVal_0
	{0x6A, 0x03},	// gAdf_u8OutGMAVal_1 
	{0x6B, 0x08},	// gAdf_u8OutGMAVal_2 
	{0x6C, 0x15},	// gAdf_u8OutGMAVal_3
	{0x6D, 0x26},	// gAdf_u8OutGMAVal_4 
	{0x6E, 0x33},	// gAdf_u8OutGMAVal_5 
	{0x6F, 0x48},	// gAdf_u8OutGMAVal_6 
	{0x70, 0x58},	// gAdf_u8OutGMAVal_7 
	{0x71, 0x68},	// gAdf_u8OutGMAVal_8 
	{0x72, 0x74},	// gAdf_u8OutGMAVal_9 
	{0x73, 0x88},	// gAdf_u8OutGMAVal_10 
	{0x74, 0xA4},	// gAdf_u8OutGMAVal_11 
	{0x75, 0xBA},	// gAdf_u8OutGMAVal_12 
	{0x76, 0xCE},	// gAdf_u8OutGMAVal_13 
	{0x77, 0xE0},	// gAdf_u8OutGMAVal_14 
	{0x78, 0xF0},	// gAdf_u8OutGMAVal_15 
	{0x79, 0xFF},	// gAdf_u8OutGMAVal_16

/*==================================*/
/* ADF GDC      	                  */
/*==================================*/
	{0xFF, 0x95},	// Page
	{0xE3, 0xA4},	// ADF_ThrLevel_GDC
	{0xE4, 0x50},	// ADF_STVAL_GDC_TH1
	{0xE5, 0x70},	// ADF_STVAL_GDC_TH2
	{0xE6, 0x40},	// ADF_Min_GDC_Th1
	{0xE7, 0x60},	// ADF_Min_GDC_Th2
	{0xE8, 0x30},	// ADF_Max_GDC_Th1
	{0xE9, 0x40},	// ADF_Max_GDC_Th2
	{0xEA, 0x0E},	// ADF_EndVal_GDC_TH1
	{0xEB, 0x30},	// ADF_EndVal_GDC_TH2

	{0xEC, 0x84},	// ADF_ThrLevel_GDC_SASP
	{0xED, 0x00},	// ADF_MinVal_GDC_SASP
	{0xEE, 0x00},	// ADF_MaxVal_GDC_SASP

/*==================================*/						
/* ADF NSF      	                  */
/*==================================*/
	{0xEF, 0xA5},	// ADF_ThrLevel_NSF
	{0xF0, 0x30},	// ADF_STVal_NSF_TH1
	{0xF1, 0x28},	// ADF_STVal_NSF_TH2
	{0xF2, 0x16},	// ADF_MinVal_NSF_TH1
	{0xF3, 0x18},	// ADF_MinVal_NSF_TH2
	{0xF4, 0x10},	// ADF_MaxVal_NSF_TH1
	{0xF5, 0x18},	// ADF_MaxVal_NSF_TH2
	{0xF6, 0x0D},	// ADF_EndVal_NSF_TH1
	{0xF7, 0x10},	// ADF_EndVal_NSF_TH2
	
	{0xF8, 0xED},	// ADF_ThrNoiseLevel_NSF
	{0xF9, 0x10},	// ADF_NSF_Noisegain
	{0xFA, 0xBA},	// ADF_ThrLevel_NSF_SASP
	{0xFB, 0x00},	// ADF_MinVal_NSF_SASP
	{0xFC, 0xF8},	// ADF_MaxVal_NSF_SASP
	
	{0xFF, 0xE0},	// Page
	{0xC2, 0x00},	// NSFTh3
	{0xC3, 0x10},	// NSFTh4
	{0xC7, 0x38},	// ADF_NSFSaThrd1
	{0xC8, 0x70},	// ADF_NSFSaThrd2
	{0xC9, 0x08},	// ADF_NSFNoiseThrd1
	{0xCA, 0x14},	// ADF_NSFNoiseThrd2
	{0xCB, 0x08},	// ADF_NSFNoiseThrd3

/*==================================*/
/* ADF EDE      		                */
/*==================================*/
	{0xFF, 0x95},	// Page
	{0xFD, 0xA9},	// ADF_EdgGain_Lux
	{0xFF, 0x96},	// Page
	{0x00, 0x00},	// ADF_MinVal_EdgGain
	{0x01, 0x00},	// ADF_MaxVal_EdgGain
	
	{0x02, 0xCB},	// ADF_ThrLevel_EDEOption
	{0x03, 0x30},	// ADF_Indoor_EDEOption
	{0x04, 0x30},	// ADF_Outdoor_EDEOption
	{0x05, 0x30},	// ADF_Indoor_EDESmEdgThrd
	{0x06, 0x16},	// ADF_Outdoor_EDESmEdgThrd
	
	{0x07, 0x53},	// ADF_ThrLevel_EDE_S1L
	{0x08, 0x76},	// ADF_ThrLevel_EDE_S1H
	{0x09, 0x08},	// ADF_EDE_STVal_SL1
	{0x0A, 0x09},	// ADF_EDE_Mid1Val_SL1
	{0x0B, 0x09},	// ADF_EDE_Mid2Val_SL1
	{0x0C, 0x0C},	// ADF_EDE_EndVal_SL1
	
	{0x0D, 0xA3},	// ADF_ThrLevel_Edge
	{0x0E, 0x06},	// ADF_Min_Coring
	{0x10, 0x0A},	// ADF_Min_Edge_Slope2
	{0x12, 0x04},	// ADF_Min_Edge_SmallOffset
	{0x14, 0x33},	// ADF_Min_Edge_Slope
	
	{0x0F, 0x04},	// ADF_Max_Coring
	{0x11, 0x0A},	// ADF_Max_Edge_Slope2
	{0x13, 0x04},	// ADF_Max_Edge_SmallOffset
	{0x15, 0x34},	// ADF_Max_Edge_Slope
	
	{0x16, 0x87},	// ADF_ThrLevel_EDE_RB
	{0x17, 0x03},	// MinVal_EDE_RBTH
	{0x18, 0x33},	// MaxVal_EDE_RBTH
	{0x19, 0x98},	// ThrLevel_EDE_SASP
	{0x1A, 0xF4},	// MinVal_EDE_SASP
	{0x1B, 0xF4},	// MaxVal_EDE_SASP
	
	{0x1C, 0x51},	// ADF_DEDE_TreLux1
	{0x1D, 0x76},	// ADF_DEDE_TreLux2
	{0x1E, 0x00},	// ADF_DEDE_STVal_XP1
	{0x1F, 0x68},	// 
	{0x20, 0x00},	// ADF_DEDE_Mid1Val_XP1
	{0x21, 0x28},	// 
	{0x22, 0x00},	// ADF_DEDE_Mid2Val_XP1
	{0x23, 0x28},	// 
	{0x24, 0x00},	// ADF_DEDE_EndVal_XP1
	{0x25, 0x20},	//

/*==================================*/
/* ADF CKL      	                  */
/*==================================*/
	{0x26, 0xED},	// ADF_ThrLevel_CKL
	
	// ADF - CKLTh1 
	{0x27, 0x94},	// ADF_ThrLevel_CKLTh1
	{0x28, 0x11},	// ADF_MinVal_CKL_TH1
	{0x29, 0x13},	// ADF_MidVal_CKL_TH1
	{0x2A, 0x13},	// ADF_MaxVal_CKL_TH1
	
	// ADF - CKLTh2 
	{0x2B, 0x06},	// ADF_Min_CKL_TH2
	{0x2C, 0x08},	// ADF_Max_CKL_TH2
	
	// ADF - CNFTh3, 4 
	{0x2F, 0x04},	// ADF_CKL_TH3_at_Dark
	{0x32, 0x00},	// ADF_CKL_TH4_at_Dark
	
	{0x30, 0x02},	// ADF_CKL_TH3_at_Normal
	{0x33, 0x14},	// ADF_CKL_TH4_at_Normal
	
	{0x31, 0x00},	// ADF_CKL_TH3_at_Bright
	{0x34, 0x00},	// ADF_CKL_TH4_at_Bright
	
	{0x2D, 0x08},	// ADF_Min_CKL_TH5
	{0x2E, 0x0B},	// ADF_Max_CKL_TH5

/*==================================*/
/* ADF CLB      	                  */
/*==================================*/
	{0x38, 0x54},	// ADF_ThrLevel_CLB

	{0x39, 0x00},	// ADF_Min_CLBTh_TH1
	{0x3A, 0x40},	// ADF_Min_CLB_Cb
	{0x3B, 0x40},	// ADF_Min_CLB_Cr

	{0x3C, 0x10},	// ADF_Max_CLBTh_TH1
	{0x3D, 0x50},	// ADF_Max_CLB_Cb
	{0x3E, 0x50},	// ADF_Max_CLB_Cr

	{0xFF, 0xE1},	// Page
	{0x4D, 0x0C},	// CLB_Sec

/*==================================*/
/* Suppression 		                  */
/*==================================*/
	{0xFF, 0x96},	// Page
	{0x35, 0x42},	// ADF_ThrLevel_SUP
	{0x36, 0x70},	// Min_suppression
	{0x37, 0x80},	// Max_suppression

/*==================================*/
/* CDC        			                */
/*==================================*/
	{0xFF, 0x95},	// Page
	{0xE2, 0x03},	// Th_CDC
	{0xFF, 0xE0},	// Page
	{0x74, 0x00},	// YOff0_DDC

/*==================================*/
/* Saturation			                  */
/*==================================*/
	{0xFF, 0x96},	// Page
	{0xA3, 0x40},	// Color Saturation

	// BGT2
	{0xA5, 0x00},	// u8ADF_BaseBGTAWBZone1
	{0xA8, 0x00},	// u8ADF_BaseBGTAWBZone2
	{0xA6, 0x00},	// BGTLux1
	{0xA9, 0x00},	// BGTLux2
	{0xA7, 0x00},	// Value1
	{0xAA, 0x00},	// Value2

	// SAT for Gamut 
	{0xAC, 0x02},	// SATZone
	{0xAD, 0x06},	// SATLux1
	{0xAE, 0x00},	// SATValue

	{0xFF, 0x95},	// ADF_refresh 
	{0xBD, 0x01},	//

/*===================================*/
/* Profile Register	                 */
/*===================================*/
	// VGA_PR
	{0xFF, 0x98},	// Page
	{0x45, 0x00},	// SensorCtrl_Addr
	{0x46, 0x0D},	//SensorMode_Addr
	{0x47, 0x00},	// SensorTestMode_Addr
	{0x48, 0x00},	// XSubSmplEn_Addr
	{0x49, 0x00},	// XSubSmplEn_Addr
	{0x4A, 0x01},	// PLL_P
	{0x4B, 0x15},	// PLL_M
	{0x4C, 0x00},	// PLL_S
	{0x4D, 0x00},	// PLL_Ctrl
	{0x4E, 0x01},	// scr_clk_sel
	{0x4F, 0x00},	// output_pad_status
	{0x50, 0x1F},	// ablk_ctrl_10
	{0x51, 0xFF},	// BayerFunc
	{0x52, 0xFF},	// RGBFunc
	{0x53, 0x02},	// SCLCtrl
	{0x54, 0x00},	//SCLHorScale
	{0x55, 0x71},	// 
	{0x56, 0x00},	//SCLVerScale
	{0x57, 0x7B},	// 
	{0x58, 0x00},	// SCLCropStartX
	{0x59, 0x00},	// 
	{0x5A, 0x00},	// SCLCropStartY
	{0x5B, 0x00},	// 
	{0x5C, 0x00},	//SCLCropEndX
	{0x5D, 0xB0},	// 
	{0x5E, 0x00},	//SCLCropEndY
	{0x5F, 0x90},	// 
	{0x60, 0x01},	// OutForm
	{0x61, 0x0D},	// OutCtrl
	{0x62, 0x04},	// AEWinStartX
	{0x63, 0x04},	// AEWinStartY
	{0x64, 0x66},	// MergedWinWidth
	{0x65, 0x5C},	// MergedWinHeight
	{0x66, 0x22},	// AWBTrim_Addr
	{0x67, 0x38},	// AWBCTWinAx_Addr
	{0x68, 0x20},	// AWBCTWinAy_Addr
	{0x69, 0x92},	// AWBCTWinBx_Addr
	{0x6A, 0x73},	// AWBCTWinBy_Addr
	{0x6B, 0x03},	// AFCFrmaeLength
	{0x6C, 0x80},	// 

	// SXGA_PR
	{0x1D, 0x00},	// SensorCtrl_Addr
	{0x1E, 0x0D},	// SensorMode_Addr
	{0x1F, 0x00},	// SensorTestMode_Addr
	{0x20, 0x00},	// XSubSmplEn_Addr
	{0x21, 0x00},	// XSubSmplEn_Addr
	{0x22, 0x01},	// PLL_P
	{0x23, 0x15},	// PLL_M
	{0x24, 0x00},	// PLL_S
	{0x25, 0x00},	// PLL_Ctrl
	{0x26, 0x01},	// scr_clk_sel
	{0x27, 0x00},	// output_pad_status
	{0x28, 0x3F},	// ablk_ctrl_10
	{0x29, 0xFF},	// BayerFunc
	{0x2A, 0xFF},	// RGBFunc
	{0x2B, 0x00},	// SCLCtrl
	{0x2C, 0x03},	// SCLHorScale
	{0x2D, 0xFF},	// 
	{0x2E, 0x03},	// SCLVerScale
	{0x2F, 0xFF},	// 
	{0x30, 0x00},	// SCLCropStartX
	{0x31, 0x00},	// 
	{0x32, 0x00},	// SCLCropStartY
	{0x33, 0x00},	// 
	{0x34, 0x05},	// SCLCropEndX
	{0x35, 0x00},	// 
	{0x36, 0x04},	// SCLCropEndY
	{0x37, 0x00},	// 
	{0x38, 0x01},	// OutForm
	{0x39, 0x0D},	// OutCtrl
	{0x3A, 0x04},	// AEWinStartX
	{0x3B, 0x04},	// AEWinStartY
	{0x3C, 0x66},	// MergedWinWidth
	{0x3D, 0x5C},	// MergedWinHeight
	{0x3E, 0x22},	// AWBTrim_Addr
	{0x3F, 0x38},	// AWBCTWinAx_Addr
	{0x40, 0x20},	// AWBCTWinAy_Addr
	{0x41, 0x92},	// AWBCTWinBx_Addr
	{0x42, 0x73},	// AWBCTWinBy_Addr
	{0x43, 0x05},	// AFCFrmaeLength
	{0x44, 0x9D},	// 

	{0xFF, 0x93},
	{0x05, 0x00},	// LastRecvCmd
	{0xFF, 0xE6},
	{0x10, 0x11},	// Preview Command

	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream stop

};


/*==============================================*/
/* CAMERA_PREVIEW (Size : 800x600)              */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_preview_800_600[]= {

// 80{0x60, 0x0_}PR
	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream off

	{0xFF, 0xE4},
	{0x14, 0x06},
	{0x15, 0x40},	// MIPI_WORD_COUNT

	{0xFF, 0x98},
	{0xBE, 0x02},  // SCLCtrl
	{0xBF, 0x01},  // SCLHorScale
	{0xC0, 0xFF},
	{0xC1, 0x01},  // SCLVerScale
	{0xC2, 0xFF},
	{0xC3, 0x00},  // SCLCropStartX
	{0xC4, 0x00},
	{0xC5, 0x00},  // SCLCropStartY
	{0xC6, 0x00},
	{0xC7, 0x03},  // SCLCropEndX
	{0xC8, 0x20},
	{0xC9, 0x02},  // SCLCropEndY
	{0xCA, 0x58},

#if defined(CONFIG_SEC_GTES_PROJECT) || defined(CONFIG_MACH_J3LTE_USA_SPR) || defined(CONFIG_MACH_J3LTE_USA_VZW)
	{0xFE, 0x16},	// Wait  25
#else
	{0xFE, 0x64},	// Wait  100
#endif
	{0xFF, 0xE4},
	{0x04, 0x01},	// Stream on

#if defined(CONFIG_SEC_GTES_PROJECT) || defined(CONFIG_MACH_J3LTE_USA_SPR)|| defined(CONFIG_MACH_J3LTE_USA_VZW)
	{0xFE, 0x32},	// Wait  50
	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream off

	{0xFF, 0xE4},
	{0x14, 0x06},
	{0x15, 0x40},	// MIPI_WORD_COUNT

	{0xFF, 0x98},
	{0xBE, 0x02},  // SCLCtrl
	{0xBF, 0x01},  // SCLHorScale
	{0xC0, 0xFF},
	{0xC1, 0x01},  // SCLVerScale
	{0xC2, 0xFF},
	{0xC3, 0x00},  // SCLCropStartX
	{0xC4, 0x00},
	{0xC5, 0x00},  // SCLCropStartY
	{0xC6, 0x00},
	{0xC7, 0x03},  // SCLCropEndX
	{0xC8, 0x20},
	{0xC9, 0x02},  // SCLCropEndY
	{0xCA, 0x58},

	{0xFE, 0x16},	// Wait  25

	{0xFF, 0xE4},
	{0x04, 0x01},	// Stream on

#endif


};


/*==============================================*/
/* CAMERA_PREVIEW (Size : 704x576)              */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_preview_704_576[] = {

// 704x576_PR
	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream off

	{0xFF, 0xE4},
	{0x14, 0x05},
	{0x15, 0x80},	// MIPI_WORD_COUNT

	{0xFF, 0x98},
	{0xBE, 0x02},  // SCLCtrl
	{0xBF, 0x01},  // SCLHorScale
	{0xC0, 0xC3},  
	{0xC1, 0x01},  // SCLVerScale
	{0xC2, 0xEC},  
	{0xC3, 0x00},  // SCLCropStartX
	{0xC4, 0x00},  
	{0xC5, 0x00},  // SCLCropStartY
	{0xC6, 0x00},  
	{0xC7, 0x02},  // SCLCropEndX
	{0xC8, 0xC0},  
	{0xC9, 0x02},  // SCLCropEndY
	{0xCA, 0x40},  

	{0xFE, 0x64},	// Wait  100

	{0xFF, 0xE4},
	{0x04, 0x01},	// Stream on

};


/*==============================================*/
/* CAMERA_PREVIEW (Size : 640x480)              */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_preview_640_480[] = {

// 64{0x48, 0x0_}PR
	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream off

	{0xFF, 0xE4},
	{0x14, 0x05},
	{0x15, 0x00},	// MIPI_WORD_COUNT

	{0xFF, 0x98},
	{0xBE, 0x02},  // SCLCtrl
	{0xBF, 0x01},  // SCLHorScale
	{0xC0, 0x99},  
	{0xC1, 0x01},  // SCLVerScale
	{0xC2, 0x99},  
	{0xC3, 0x00},  // SCLCropStartX
	{0xC4, 0x00},  
	{0xC5, 0x00},  // SCLCropStartY
	{0xC6, 0x00},  
	{0xC7, 0x02},  // SCLCropEndX
	{0xC8, 0x80},  
	{0xC9, 0x01},  // SCLCropEndY
	{0xCA, 0xE0},  

	{0xFE, 0x64},	// Wait  100

	{0xFF, 0xE4},
	{0x04, 0x01},	// Stream on

};

/*==============================================*/
/* CAMERA_PREVIEW (Size : 352x288)              */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_preview_352_288[] = {

	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream off

	{0xFF, 0xE4},
	{0x14, 0x02},
	{0x15, 0xC0},	// MIPI_WORD_COUNT

	{0xFF, 0x98},
	{0xBE, 0x02},  // SCLCtrl
	{0xBF, 0x00},  // SCLHorScale
	{0xC0, 0xE1},
	{0xC1, 0x00},  // SCLVerScale
	{0xC2, 0xF5},
	{0xC3, 0x00},  // SCLCropStartX
	{0xC4, 0x00},
	{0xC5, 0x00},  // SCLCropStartY
	{0xC6, 0x00},
	{0xC7, 0x01},  // SCLCropEndX
	{0xC8, 0x60},
	{0xC9, 0x01},  // SCLCropEndY
	{0xCA, 0x20},

	{0xFE, 0x64},	// Wait  100

	{0xFF, 0xE4},
	{0x04, 0x01},	// Stream on

};

/*==============================================*/
/* CAMERA_PREVIEW (Size : 320x240)              */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_preview_320_240[] = {
	// 320x240 Size
	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream off

	{0xFF, 0xE4},
	{0x14, 0x02},
	{0x15, 0x80},	// MIPI_WORD_COUNT

	{0xFF, 0x98},
	{0xBE, 0x02},  // SCLCtrl
	{0xBF, 0x00},  // SCLHorScale
	{0xC0, 0xCC},
	{0xC1, 0x00},  // SCLVerScale
	{0xC2, 0xCC},
	{0xC3, 0x00},  // SCLCropStartX
	{0xC4, 0x00},
	{0xC5, 0x00},  // SCLCropStartY
	{0xC6, 0x00},
	{0xC7, 0x01},  // SCLCropEndX
	{0xC8, 0x40},
	{0xC9, 0x00},  // SCLCropEndY
	{0xCA, 0xF0},

	{0xFE, 0x64},	// Wait  100

	{0xFF, 0xE4},
	{0x04, 0x01},	// Stream on

};

/*==============================================*/
/* CAMERA_PREVIEW (Size : 176x144)			        */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_preview_176_144[] = {

	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream off

	{0xFF, 0xE4},
	{0x14, 0x01},
	{0x15, 0x60},	// MIPI_WORD_COUNT

	{0xFF, 0x98},
	{0xBE, 0x02},  // SCLCtrl
	{0xBF, 0x00},  // SCLHorScale
	{0xC0, 0x70},
	{0xC1, 0x00},  // SCLVerScale
	{0xC2, 0x7A},
	{0xC3, 0x00},  // SCLCropStartX
	{0xC4, 0x00},
	{0xC5, 0x00},  // SCLCropStartY
	{0xC6, 0x00},
	{0xC7, 0x00},  // SCLCropEndX
	{0xC8, 0xB0},
	{0xC9, 0x00},  // SCLCropEndY
	{0xCA, 0x90},

	{0xFE, 0x64},	// Wait  100

	{0xFF, 0xE4},
	{0x04, 0x01},	// Stream on

};

/*==============================================*/
/* CAMERA_SNAPSHOT (Size : 1600x1200)			      */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_Capture_1600_1200[] = {

	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream off

	{0xFF, 0xE4},
	{0x14, 0x0C},
	{0x15, 0x80},	// MIPI_WORD_COUNT

	{0xFF, 0x98},
	{0xBE, 0x00},  // SCLCtrl
	{0xBF, 0x03},  // SCLHorScale
	{0xC0, 0xFF},  
	{0xC1, 0x03},  // SCLVerScale
	{0xC2, 0xFF},  
	{0xC3, 0x00},  // SCLCropStartX
	{0xC4, 0x00},  
	{0xC5, 0x00},  // SCLCropStartY
	{0xC6, 0x00},  
	{0xC7, 0x05},  // SCLCropEndX
	{0xC8, 0x00},  
	{0xC9, 0x04},  // SCLCropEndY
	{0xCA, 0x00},  

	{0xFE, 0x96},	// Wait  150 

	{0xFF, 0xE4},
	{0x04, 0x01},	// Stream on

};
/*-------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------*/


/*==============================================*/
/* CAMERA_STREAM_STOP						              	*/
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_stream_stop[]= {

	{0xFF, 0xE4},
	{0x04, 0x00},
};


/*==============================================*/
/* CAMERA_I2C_CHECK - for ESD					          */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_DTP_On[] = {
	{0xFF, 0x98},	// Page mode
	{0xB9, 0x00},	// BayerFunc
	{0xBA, 0x28},	// RGBYcFunc
	{0xFF, 0xE0},	// Page mode
	{0x02, 0x05},	// TPG Gamma
                       
	{0xFE, 0x64},	// Wait  100ms
};

struct msm_camera_i2c_reg_conf db8221a_DTP_Off[] = {
	{0xFF, 0x98},	// Page mode
	{0xB9, 0xFF},	// BayerFunc
	{0xBA, 0xFF},	// RGBYcFunc
	{0xFF, 0xE0},	// Page mode
	{0x02, 0x00},	// TPG Disable
                         
	{0xFE, 0x64},	// Wait  100
};


/*==============================================*/
/* CAMERA_Flip_X							                  */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_Capture_X_Flip[] = {

	{0xFF, 0x98},
	{0xDF, 0x01},	// X-Flip

};


/*==============================================*/
/* CAMERA_Flip_Y							                  */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_Capture_Y_Flip[] = {

	{0xFF, 0x98},
	{0xDF, 0x02},	// Y-Flip

};

/*-------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------*/


/*==============================================*/
/* CAMERA_BRIGHTNESS_1 (1/9) M4				          */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_bright_m4[] = {

// Brightness -4
	{0xFF, 0x98},	// Page mode
	{0xBC, 0xB8},	// Brightness

};


/*==============================================*/
/* CAMERA_BRIGHTNESS_2 (2/9) M3				          */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_bright_m3[] = {

// Brightness -3
	{0xFF, 0x98},	// Page mode
	{0xBC, 0xCA},	// Brightness

};


/*==============================================*/
/* CAMERA_BRIGHTNESS_3 (3/9) M2				          */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_bright_m2[] = {

// Brightness -2
	{0xFF, 0x98},	// Page mode
	{0xBC, 0xDC},	// Brightness

};


/*==============================================*/
/* CAMERA_BRIGHTNESS_4 (4/9) M1				          */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_bright_m1[] = {

// Brightness -1
	{0xFF, 0x98},	// Page mode
	{0xBC, 0xEE},	// Brightness

};


/*==============================================*/
/* CAMERA_BRIGHTNESS_5 (5/9) Default		        */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_bright_default[] = {

// Brightness 0
	{0xFF, 0x98},	// Page mode
	{0xBC, 0x00},	// Brightness

};


/*==============================================*/
/* CAMERA_BRIGHTNESS_6 (6/9) P1				          */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_bright_p1[] = {

// Brightness +1
	{0xFF, 0x98},	// Page mode
	{0xBC, 0x12},	// Brightness

};


/*==============================================*/
/* CAMERA_BRIGHTNESS_7 (7/9) P2				          */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_bright_p2[] = {

// Brightness +2
	{0xFF, 0x98},	// Page mode
	{0xBC, 0x24},	// Brightness

};


/*==============================================*/
/* CAMERA_BRIGHTNESS_8 (8/9) P3				          */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_bright_p3[] = {

// Brightness +3
	{0xFF, 0x98},	// Page mode
	{0xBC, 0x36},	// Brightness

};


/*==============================================*/
/* CAMERA_BRIGHTNESS_9 (9/9) P4				          */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_bright_p4[] = {

// Brightness +4
	{0xFF, 0x98},	// Page mode
	{0xBC, 0x48},	// Brightness

};

/*-------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------*/

/*==============================================*/
/* CAMERA_CONTRAST_1 (1/9) M4				            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_contrast_m4[] = {

// Contrast -4
	{0xFF, 0x98},	// Page mode
	{0xBD, 0xA0},	// Contrast

};


/*==============================================*/
/* CAMERA_CONTRAST_1 (2/9) M3				            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_contrast_m3[] = {

// Contrast -3
	{0xFF, 0x98},	// Page mode
	{0xBD, 0x98},	// Contrast

};


/*==============================================*/
/* CAMERA_CONTRAST_1 (3/9) M2				            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_contrast_m2[] = {

// Contrast -2
	{0xFF, 0x98},	// Page mode
	{0xBD, 0x90},	// Contrast

};


/*==============================================*/
/* CAMERA_CONTRAST_1 (4/9) M1					          */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_contrast_m1[] = {

// Contrast -1
	{0xFF, 0x98},	// Page mode
	{0xBD, 0x88},	// Contrast

};


/*==============================================*/
/* CAMERA_CONTRAST_1 (5/9) Default				      */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_contrast_default[] = {

// Contrast 0
	{0xFF, 0x98},	// Page mode
	{0xBD, 0x80},	// Contrast

};


/*==============================================*/
/* CAMERA_CONTRAST_1 (6/9) P1				            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_contrast_p1[] = {

// Contrast +1
	{0xFF, 0x98},	// Page mode
	{0xBD, 0x78},	// Contrast

};


/*==============================================*/
/* CAMERA_CONTRAST_1 (7/9) P2				            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_contrast_p2[] = {

	// Contrast +2
	{0xFF, 0x98},	// Page mode
	{0xBD, 0x70},	// Contrast

};


/*==============================================*/
/* CAMERA_CONTRAST_1 (8/9) P3				            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_contrast_p3[] = {

// Contrast +3
	{0xFF, 0x98},	// Page mode
	{0xBD, 0x68},	// Contrast

};


/*==============================================*/
/* CAMERA_CONTRAST_1 (9/9) P4				            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_contrast_p4[] = {

// Contrast +4
	{0xFF, 0x98},	// Page mode
	{0xBD, 0x60},	// Contrast

};


/*-------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------*/

/*==============================================*/
/* CAMERA_EFFECCT_NORMAL					              */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_effect_none[] = {

	{0xFF, 0x98},
	{0xCB, 0x00},	// SPECtrl
	{0xCC, 0x00},	// PEDData1
	{0xCD, 0x00},	// PEDData2
	{0xCE, 0x00},	// PEDData3

};


/*==============================================*/
/* CAMERA_EFFECT_NEGATIVE						            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_effect_negative[] = {

	{0xFF, 0x98},
	{0xCB, 0x20},	// SPECtrl
	{0xCC, 0x00},	// PEDData1
	{0xCD, 0x00},	// PEDData2
	{0xCE, 0x00},	// PEDData3

};


/*==============================================*/
/* CAMERA_EFFECT_GRAY						                */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_effect_gray[] = {

	{0xFF, 0x98},
	{0xCB, 0x08},	// SPECtrl
	{0xCC, 0x00},	// PEDData1
	{0xCD, 0x00},	// PEDData2
	{0xCE, 0x00},	// PEDData3

};


/*==============================================*/
/* CAMERA_EFFECT_SEPIA						              */
/*==============================================*/
#if defined(CONFIG_MACH_J3LTE_USA_SPR) || defined(CONFIG_MACH_J3LTE_USA_VZW)
struct msm_camera_i2c_reg_conf db8221a_effect_sepia[] = {

	{0xFF, 0x98},
	{0xCC, 0x00},	// PEDData1
	{0xCD, 0x53},   // PEDData2
	{0xCE, 0x98},	// PEDData3
	{0xCB, 0x18},	// SPECtrl

};
#else
struct msm_camera_i2c_reg_conf db8221a_effect_sepia[] = {

	{0xFF, 0x98},
	{0xCC, 0x00},	// PEDData1
#if defined(CONFIG_SEC_GTES_PROJECT)
	{0xCD, 0x67},  // PEDData2
#else
	{0xCD, 0x71},	// PEDData2
#endif
	{0xCE, 0x9A},	// PEDData3
	{0xCB, 0x18},	// SPECtrl

};
#endif
/*==============================================*/
/* CAMERA_EFFECT_AQUA						                */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_effect_aqua[] = {

	{0xFF, 0x98},
	{0xCB, 0x18},	// SPECtrl
	{0xCC, 0x00},	// PEDData1
	{0xCD, 0xAB},	// PEDData2
	{0xCE, 0x00},	// PEDData3

};


/*-------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------*/


/*==============================================*/
/* CAMERA_AWB_AUTO							                */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_wb_auto[] = {

	{0xFF, 0x94},
	{0xDA, 0x00},	// Indoor Lux Threshold
	{0xDB, 0x30},
	{0xDC, 0x01},	// Outdoor Lux Threshold
	{0xDD, 0x00},

	{0xFF, 0x94},
	{0xF6, 0x00},	// AWB_Weight_Outdoor_0_Flash
	{0xF7, 0x18},	// AWB_Weight_Outdoor_1_Cloudy
	{0xF8, 0x00},	// AWB_Weight_Outdoor_2_D65
	{0xF9, 0x20},	// AWB_Weight_Outdoor_3_Fluorescent
	{0xFA, 0x00},	// AWB_Weight_Outdoor_4_CWF
	{0xFB, 0x00},	// AWB_Weight_Outdoor_5_TL84
	{0xFC, 0x00},	// AWB_Weight_Outdoor_6_A
	{0xFD, 0x00},	// AWB_Weight_Outdoor_7_Horizon

	{0x4A, 0x04},	// Min Rgain
	{0x4B, 0x28},  
	{0x4C, 0x06},	// Max Rgain
	{0x4D, 0x80},  
	{0x4E, 0x03},	// Min Bgain
	{0x4F, 0xB8},  
	{0x50, 0x05},	// Max BGain
	{0x51, 0xE8},

	{0x5B, 0x06},	// LSValue1
	
};


/*==============================================*/
/* CAMERA_AWB_DayLight						              */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_wb_daylight[] = {

	{0xFF, 0x94},
	{0xDA, 0x00},	// Indoor Lux Threshold 
	{0xDB, 0x00},
	{0xDC, 0x00},	// Outdoor Lux Threshold
	{0xDD, 0x00},

	{0xFF, 0x94},
	{0xF6, 0x00},	// AWB_Weight_Outdoor_0_Flash
	{0xF7, 0x00},	// AWB_Weight_Outdoor_1_Cloudy
	{0xF8, 0x20},	// AWB_Weight_Outdoor_2_D65 
	{0xF9, 0x00},	// AWB_Weight_Outdoor_3_Fluorescent  
	{0xFA, 0x00},	// AWB_Weight_Outdoor_4_CWF  
	{0xFB, 0x00},	// AWB_Weight_Outdoor_5_TL84
	{0xFC, 0x00},	// AWB_Weight_Outdoor_6_A
	{0xFD, 0x00},	// AWB_Weight_Outdoor_7_Horizon

	{0x4A, 0x05},	// Min Rgain
	{0x4B, 0x48},  
	{0x4C, 0x05},	// Max Rgain
	{0x4D, 0x48},  
	{0x4E, 0x04},	// Min Bgain
	{0x4F, 0x80},  
	{0x50, 0x04},	// Max BGain
	{0x51, 0x80},

	{0x5B, 0x0F},	// LSValue1

};


/*==============================================*/
/* CAMERA_AWB_CLOUDY (흐린날)				            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_wb_cloudy[] = {

	{0xFF, 0x94},
	{0xDA, 0x00},	// Indoor Lux Threshold 
	{0xDB, 0x00},
	{0xDC, 0x00},	// Outdoor Lux Threshold
	{0xDD, 0x00},

	{0xFF, 0x94},
	{0xF6, 0x00},	// AWB_Weight_Outdoor_0_Flash
	{0xF7, 0x00},	// AWB_Weight_Outdoor_1_Cloudy
	{0xF8, 0x20},	// AWB_Weight_Outdoor_2_D65 
	{0xF9, 0x00},	// AWB_Weight_Outdoor_3_Fluorescent  
	{0xFA, 0x00},	// AWB_Weight_Outdoor_4_CWF  
	{0xFB, 0x00},	// AWB_Weight_Outdoor_5_TL84
	{0xFC, 0x00},	// AWB_Weight_Outdoor_6_A
	{0xFD, 0x00},	// AWB_Weight_Outdoor_7_Horizon

	{0x4A, 0x05},	// Min Rgain
	{0x4B, 0xF8},  
	{0x4C, 0x06},	// Max Rgain
	{0x4D, 0x10},  
	{0x4E, 0x03},	// Min Bgain
	{0x4F, 0xF8},  
	{0x50, 0x04},	// Max BGain
	{0x51, 0x10},

	{0x5B, 0x0F},	// LSValue1

};


/*==============================================*/
/* CAMERA_AWB_FLUORESCENT (형광등)			        */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_wb_fluorescent[] = {

	{0xFF, 0x94},
	{0xDA, 0x00},	// Indoor Lux Threshold 
	{0xDB, 0x00},
	{0xDC, 0x00},	// Outdoor Lux Threshold
	{0xDD, 0x00},

	{0xFF, 0x94},
	{0xF6, 0x00},	// AWB_Weight_Outdoor_0_Flash
	{0xF7, 0x00},	// AWB_Weight_Outdoor_1_Cloudy
	{0xF8, 0x00},	// AWB_Weight_Outdoor_2_D65 
	{0xF9, 0x20},	// AWB_Weight_Outdoor_3_Fluorescent  
	{0xFA, 0x00},	// AWB_Weight_Outdoor_4_CWF  
	{0xFB, 0x00},	// AWB_Weight_Outdoor_5_TL84
	{0xFC, 0x00},	// AWB_Weight_Outdoor_6_A
	{0xFD, 0x00},	// AWB_Weight_Outdoor_7_Horizon

	{0x4A, 0x04},	// Min Rgain
	{0x4B, 0xF8},  
	{0x4C, 0x05},	// Max Rgain
	{0x4D, 0x10},  
	{0x4E, 0x05},	// Min Bgain
	{0x4F, 0xA8},  
	{0x50, 0x05},	// Max BGain
	{0x51, 0xC0},

	{0x5B, 0x0F},	// LSValue1

};


/*==============================================*/
/* CAMERA_AWB_INCA (백열등)					            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_wb_incandescent[] = {

	{0xFF, 0x94},
	{0xDA, 0x00},	// Indoor Lux Threshold 
	{0xDB, 0x00},
	{0xDC, 0x00},	// Outdoor Lux Threshold
	{0xDD, 0x00},

	{0xFF, 0x94},
	{0xF6, 0x00},	// AWB_Weight_Outdoor_0_Flash
	{0xF7, 0x00},	// AWB_Weight_Outdoor_1_Cloudy
	{0xF8, 0x00},	// AWB_Weight_Outdoor_2_D65 
	{0xF9, 0x00},	// AWB_Weight_Outdoor_3_Fluorescent  
	{0xFA, 0x00},	// AWB_Weight_Outdoor_4_CWF  
	{0xFB, 0x00},	// AWB_Weight_Outdoor_5_TL84
	{0xFC, 0x20},	// AWB_Weight_Outdoor_6_A
	{0xFD, 0x00},	// AWB_Weight_Outdoor_7_Horizon

	{0x4A, 0x03},	// Min Rgain
	{0x4B, 0xD8},  
	{0x4C, 0x03},	// Max Rgain
	{0x4D, 0xF0},  
	{0x4E, 0x06},	// Min Bgain
	{0x4F, 0x5F},  
	{0x50, 0x06},	// Max BGain
	{0x51, 0x77},

	{0x5B, 0x0F},	// LSValue1

};


/*-------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------*/

/*==============================================*/
/* CAMERA_FPS_AUTO							                */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_auto_fps[] = {

	{0xFF, 0x93},
	{0x07, 0x01},	// AEMODE
	{0x7E, 0x03},	// Min Frame High
	{0x7F, 0x21},	// Min Frame Low

	{0x82, 0x0F},	// 60Hz Max
	{0x83, 0x0A},	// 60Hz 3 Lut
	{0x84, 0x08},	// 60Hz 2 Lut
	{0x85, 0x08},	// 60Hz 1 Lut
	{0x86, 0x0C},	// 50Hz Max
	{0x87, 0x08},	// 50Hz 3 Lut
	{0x88, 0x06},	// 50Hz 2 Lut
	{0x89, 0x06},	// 50Hz 1 Lut
	{0x8A, 0x05},	// 60Hz Max Frame High
	{0x8B, 0x04},	// 60Hz Max Frame Low
	{0x8C, 0x04},	// 50Hz Max Frame High
	{0x8D, 0xF4},	// 50Hz Max Frame Low

	{0x8E, 0x30},	// LuxLevel_Y3
	{0x8F, 0x20},	// LuxLevel_Y2
	{0x90, 0x02},	// LuxLevel_Y1

	{0x08, 0x3D},	// AECTRL

	{0xFF, 0xE4},
	{0x04, 0x01},	// Stream on

};


/*==============================================*/
/* CAMERA_CAMCORDER							                */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_24fps_Camcoder[]  = {

// 64{0x48, 0x0_}PR
	{0xFF, 0xE4},
	{0x04, 0x00},	// Stream off

	{0xFF, 0xE4},
	{0x14, 0x05},
	{0x15, 0x00},	// MIPI_WORD_COUNT

	{0xFF, 0x98},
	{0xBE, 0x02},  // SCLCtrl
	{0xBF, 0x01},  // SCLHorScale
	{0xC0, 0x99},  
	{0xC1, 0x03},  // SCLVerScale
	{0xC2, 0x33},  
	{0xC3, 0x00},  // SCLCropStartX
	{0xC4, 0x00},  
	{0xC5, 0x00},  // SCLCropStartY
	{0xC6, 0x00},  
	{0xC7, 0x02},  // SCLCropEndX
	{0xC8, 0x80},  
	{0xC9, 0x01},  // SCLCropEndY
	{0xCA, 0xE0},  

	{0xEA, 0x00},	// HorSubsampling
	{0xEB, 0x01},	// VerSubsampling


// Fixed Frame
	{0xFF, 0x93},
	{0x07, 0x02},	// AEMODE
	{0x4A, 0x00},	// LuxTimeTB_0
	{0x4B, 0x80},	// LuxTimeTB_0
	{0x4C, 0x00},	// LuxTimeTB_1
	{0x4D, 0xD0},	// LuxTimeTB_1
	{0x4E, 0x01},	// LuxTimeTB_2
	{0x4F, 0x00},	// LuxTimeTB_2
	{0x50, 0x01},	// LuxTimeTB_3
	{0x51, 0x80},	// LuxTimeTB_3
	{0x79, 0xC0},	// Gain Max
	{0x7E, 0x09},	// Min Frame High
	{0x7F, 0x61},	// Min Frame Low

	{0x72, 0x0D},	// Sensor clock
	{0x73, 0xF8},	//

// AE : Matrix
	{0xFF, 0x93},
	{0x0B, 0x88},	 // Weight_0 
	{0x0C, 0x88},	 // Weight_1
	{0x0D, 0x88},	 // Weight_2
	{0x0E, 0x88},	 // Weight_3
	{0x0F, 0x88},	 // Weight_4
	{0x10, 0x88},	 // Weight_5
	{0x11, 0x88},	 // Weight_6
	{0x12, 0x88},	 // Weight_7
	{0x13, 0x88},	 // Weight_8
	{0x14, 0x88},	 // Weight_9
	{0x15, 0x88},	 // Weight_10
	{0x16, 0x88},	 // Weight_11
	{0x17, 0x08},	 // Weight_12

	{0x18, 0x01},	// AESpeed

	{0x1B, 0x08},	//Analog gain Max


	{0x82, 0x04},	// 60Hz Max
	{0x83, 0x04},	// 60Hz 3 Lut
	{0x84, 0x04},	// 60Hz 2 Lut
	{0x85, 0x04},	// 60Hz 1 Lut
	{0x86, 0x03},	// 50Hz Max
	{0x87, 0x03},	// 50Hz 3 Lut
	{0x88, 0x03},	// 50Hz 2 Lut
	{0x89, 0x03},	// 50Hz 1 Lut
	{0x8A, 0x02},	// 60Hz Max Frame High
	{0x8B, 0xF3},	// 60Hz Max Frame Low
	{0x8C, 0x02},	// 50Hz Max Frame High
	{0x8D, 0xD5},	// 50Hz Max Frame Low

	{0x8E, 0x19},	// LuxLevel_Y3
	{0x8F, 0x08},	// LuxLevel_Y2
	{0x90, 0x01},	// LuxLevel_Y1

	{0x08, 0x3D},	// AECTRL

	{0xFF, 0xE4},
	{0x04, 0x01},	// Stream on

};


/*==============================================*/
/* CAMERA_ANTI_BANDING_50Hz					            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_anti_banding_flicker_50Hz[]= {

	{0xFF, 0x93},
	{0x1C, 0x00},
	{0x1D, 0x05},
	{0x1E, 0x74},
	{0x1F, 0x7C},
	{0x08, 0x3D},	// 50Hz

};


/*==============================================*/
/* CAMERA_ANTI_BANDING_60Hz					            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_anti_banding_flicker_60Hz[]= {

	{0xFF, 0x93},
	{0x1C, 0x00},
	{0x1D, 0x04},
	{0x1E, 0x8B},
	{0x1F, 0xBC},
	{0x08, 0x3F},	// 60Hz

};



/*-------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------*/

/*==============================================*/
/* CAMERA_METERING_MATRIX					              */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_metering_matrix[] = {

// AE : Matrix
	{0xFF, 0x93},
	{0x0B, 0x88},	 // Weight_0 
	{0x0C, 0x88},	 // Weight_1
	{0x0D, 0x88},	 // Weight_2
	{0x0E, 0x88},	 // Weight_3
	{0x0F, 0x88},	 // Weight_4
	{0x10, 0x88},	 // Weight_5
	{0x11, 0x88},	 // Weight_6
	{0x12, 0x88},	 // Weight_7
	{0x13, 0x88},	 // Weight_8
	{0x14, 0x88},	 // Weight_9
	{0x15, 0x88},	 // Weight_10
	{0x16, 0x88},	 // Weight_11
	{0x17, 0x08},	 // Weight_12

};


/*==============================================*/
/* CAMERA_METERING_MATRIX						            */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_metering_center[] = {

// AE : Center
	{0xFF, 0x93},
	{0x0B, 0x11},	//Weight_0
	{0x0C, 0x11},	//Weight_1
	{0x0D, 0x11},	//Weight_2
	{0x0E, 0xC8},	//Weight_3
	{0x0F, 0x18},	//Weight_4
	{0x10, 0xC1},	//Weight_5
	{0x11, 0xCF},	//Weight_6
	{0x12, 0x11},	//Weight_7
	{0x13, 0xC8},	//Weight_8
	{0x14, 0x18},	//Weight_9
	{0x15, 0x11},	//Weight_10
	{0x16, 0x11},	//Weight_11
	{0x17, 0x01},	//Weight_12

};


/*==============================================*/
/* CAMERA_METERING_MATRIX					              */
/*==============================================*/

struct msm_camera_i2c_reg_conf db8221a_metering_spot[] = {

// AE : Spot
	{0xFF, 0x93},
	{0x0B, 0x00},	//Weight_0
	{0x0C, 0x00},	//Weight_1
	{0x0D, 0x00},	//Weight_2
	{0x0E, 0x11},	//Weight_3
	{0x0F, 0x01},	//Weight_4
	{0x10, 0x10},	//Weight_5
	{0x11, 0x1F},	//Weight_6
	{0x12, 0x00},	//Weight_7
	{0x13, 0x11},	//Weight_8
	{0x14, 0x01},	//Weight_9
	{0x15, 0x00},	//Weight_10
	{0x16, 0x00},	//Weight_11
	{0x17, 0x00},	//Weight_12

};

#endif /* _DB8221A_REGS_H_ */
